import React, { useState, useEffect } from 'react';
import {
  Calendar,
  Star,
  Users,
  TrendingUp,
  MessageCircle,
  Search,
  ChevronRight,
  Sparkles,
  Award,
  Eye,
  ThumbsUp,
  X,
  Check,
  ExternalLink
} from 'lucide-react';
import { mockCommunityPosts } from '../../data/mockData';
import { CommunityPost } from '../../types';
import EventPostForm from './EventPostForm';
import { createFavoriteEventPost } from '../../services/casePostService';
import { useAuth } from '../../hooks/useAuth';
import { saveUserParticipatingEvents, getUserParticipatingEvents } from '../../services/eventService';

interface Event {
  id: string;
  name: string;
  description: string;
  startDate: Date;
  endDate: Date;
  status: 'upcoming' | 'active' | 'completed';
  tags: string[];
  totalPosts: number;
  totalViews: number;
  totalReactions: number;
  stores: string[];
  bestPractices: CommunityPost[];
  successPatterns: string[];
  keyPhrases: string[];
  aiSummary: string;
  essentialKnowledge?: {
    overview: string;
    mainCharacters: string[];
    fanBase: string[];
    precautions: string[];
    servicePoints: string[];
    officialSiteUrl?: string;
  };
}

const mockEvents: Event[] = [
  {
    id: '1',
    name: '蜻ｪ陦灘ｻｻ謌ｦ繝輔ぉ繧｢',
    description: '莠ｺ豌励い繝九Γ縲悟測陦灘ｻｻ謌ｦ縲阪→縺ｮ繧ｳ繝ｩ繝懊Ξ繝ｼ繧ｷ繝ｧ繝ｳ繧､繝吶Φ繝医る剞螳壹げ繝・ぜ雋ｩ螢ｲ縺ｨ繧ｫ繝ｼ繝牙哨繧ｳ繝溷ｼｷ蛹悶く繝｣繝ｳ繝壹・繝ｳ',
    startDate: new Date('2024-01-15'),
    endDate: new Date('2024-02-15'),
    status: 'active',
    tags: ['#蜻ｪ陦灘ｻｻ謌ｦ', '#繧｢繝九Γ繧ｳ繝ｩ繝・, '#髯仙ｮ壹げ繝・ぜ', '#繧ｫ繝ｼ繝牙哨繧ｳ繝・],
    totalPosts: 12,
    totalViews: 456,
    totalReactions: 89,
    stores: ['貂玖ｰｷ蠎・, '譁ｰ螳ｿ蠎・, '豎陲句ｺ・, '譛画･ｽ逕ｺ蠎・],
    bestPractices: mockCommunityPosts.slice(0, 2),
    successPatterns: [
      '繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ諢帙ｒ蜈ｱ諢溘・繧､繝ｳ繝医↓縺励◆閾ｪ辟ｶ縺ｪ螢ｰ縺九￠',
      '繧､繝吶Φ繝磯剞螳夂音蜈ｸ繧呈ｴｻ逕ｨ縺励◆繧ｫ繝ｼ繝画署譯・,
      '繝輔ぃ繝ｳ蠢・炊繧堤炊隗｣縺励◆荳∝ｯｧ縺ｪ謗･螳｢'
    ],
    keyPhrases: [
      '縲後％縺ｮ繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ縲∽ｺｺ豌励〒縺吶ｈ縺ｭ・√・,
      '縲後う繝吶Φ繝域悄髢謎ｸｭ縺縺代・迚ｹ蜈ｸ縺後≠繧九ｓ縺ｧ縺吶・,
      '縲梧ｬ｡蝗槭・繧ｳ繝ｩ繝懊〒繧ゅ♀蠕励↓菴ｿ縺医∪縺吶・
    ],
    aiSummary: '繧｢繝九Γ繝輔ぃ繝ｳ縺ｮ蠢・炊繧堤炊隗｣縺励∝・諢溘ｒ遉ｺ縺吶％縺ｨ縺ｧ閾ｪ辟ｶ縺ｪ繧ｫ繝ｼ繝牙哨繧ｳ繝溘↓縺､縺ｪ縺偵ｋ謌仙粥繝代ち繝ｼ繝ｳ縺悟､壽焚蝣ｱ蜻翫＆繧後※縺・∪縺吶ら音縺ｫ髯仙ｮ壽─繧呈ｼ泌・縺吶ｋ螢ｰ縺九￠縺悟柑譫懃噪縺ｧ縺吶・,
    essentialKnowledge: {
      overview: '縲悟測陦灘ｻｻ謌ｦ縲阪・蜻ｪ髴翫→蜻ｪ陦灘ｸｫ縺ｮ謌ｦ縺・ｒ謠上￥莠ｺ豌励い繝九Γ菴懷刀縲ら樟莉｣譌･譛ｬ繧定・蜿ｰ縺ｫ縲・ｫ俶｡逕溘・荳ｻ莠ｺ蜈ｬ縺悟測陦灘ｸｫ縺ｨ縺励※謌宣聞縺励※縺・￥迚ｩ隱槭・,
      mainCharacters: [
        '陌取摶謔莉・ｼ壽・繧九￥豁｣鄒ｩ諢溘・蠑ｷ縺・ｸｻ莠ｺ蜈ｬ',
        '莠疲擅謔滂ｼ壽怙蠑ｷ縺ｮ蜻ｪ陦灘ｸｫ縺ｧ莠ｺ豌湧o.1繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ',
        '莨城ｻ呈・・壹け繝ｼ繝ｫ縺ｧ蜀ｷ髱吶↑蜷檎ｴ夂函'
      ],
      fanBase: [
        '蟄ｦ逕溘・闍･蟷ｴ螻､・・0莉｣縲・0莉｣・峨′荳ｭ蠢・,
        'SNS縺ｧ諡｡謨｣蜉帙′蠑ｷ縺・,
        '螂ｳ諤ｧ繝輔ぃ繝ｳ縺悟､壽焚繧貞頃繧√ｋ',
        '繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ繧ｰ繝・ぜ縺ｸ縺ｮ雉ｼ雋ｷ諢乗ｬｲ縺碁ｫ倥＞'
      ],
      precautions: [
        '莠ｺ豌励げ繝・ぜ縺ｯ蜊ｳ螳悟｣ｲ縺吶ｋ縺溘ａ縲・剞螳壽─繧貞ｼｷ隱ｿ',
        '繝輔ぃ繝ｳ蠢・炊繧貞ｰ企㍾縺励∽ｽ懷刀縺ｸ縺ｮ逅・ｧ｣繧堤､ｺ縺・,
        '蛻晄焔縺ｧ繧ｫ繝ｼ繝牙匡隱倥○縺壹∽ｼ夊ｩｱ縺九ｉ閾ｪ辟ｶ縺ｫ蟆主・',
        '繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ蜷阪ｄ險ｭ螳壹ｒ髢馴＆縺医↑縺・ｈ縺・ｳｨ諢・
      ],
      servicePoints: [
        '繧ｭ繝｣繝ｩ諢帙↓蜈ｱ諢溘＠縺ｦ縺九ｉ莨夊ｩｱ縺ｫ蜈･繧・,
        '髯仙ｮ夂音蜈ｸ繧偵き繝ｼ繝画署譯医・縺阪▲縺九￠縺ｫ',
        '辭ｱ驥上ｒ蟆企㍾縺励・℃蠎ｦ縺ｫ蝟ｶ讌ｭ逧・↓縺ｪ繧峨↑縺・,
        '縲梧ｬ｡蝗槭・繧ｳ繝ｩ繝懊〒繧ゅ♀蠕励阪→縺・≧繝｡繝ｪ繝・ヨ繧呈署遉ｺ'
      ],
      officialSiteUrl: 'https://jujutsukaisen.jp/'
    }
  },
  {
    id: '2',
    name: 'MGA繝輔ぉ繧ｹ2024',
    description: '繝槭Ν繧､繧ｰ繝ｫ繝ｼ繝怜ｹｴ谺｡繧､繝吶Φ繝医ょ・蠎苓・蜿ょ刈縺ｮ螟ｧ蝙九く繝｣繝ｳ繝壹・繝ｳ',
    startDate: new Date('2024-02-01'),
    endDate: new Date('2024-02-29'),
    status: 'completed',
    tags: ['#MGA繝輔ぉ繧ｹ', '#蜈ｨ蠎苓・', '#蟷ｴ谺｡繧､繝吶Φ繝・, '#繧ｭ繝｣繝ｳ繝壹・繝ｳ'],
    totalPosts: 28,
    totalViews: 1234,
    totalReactions: 267,
    stores: ['蜈ｨ蠎苓・'],
    bestPractices: mockCommunityPosts.slice(1, 3),
    successPatterns: [
      '繧､繝吶Φ繝育音蜈ｸ繧呈ｴｻ逕ｨ縺励◆遨肴･ｵ逧・↑螢ｰ縺九￠',
      '縺雁ｮ｢讒倥・雉ｼ雋ｷ諢乗ｬｲ縺碁ｫ倥＞譎よ悄繧堤漁縺｣縺滓署譯・,
      '繝√・繝荳荳ｸ縺ｨ縺ｪ縺｣縺滓磁螳｢菴灘宛'
    ],
    keyPhrases: [
      '縲後ヵ繧ｧ繧ｹ譛滄俣荳ｭ縺ｮ迚ｹ蛻･迚ｹ蜈ｸ縺ｧ縺吶・,
      '縲御ｻ翫□縺代・縺雁ｾ励↑繧ｭ繝｣繝ｳ繝壹・繝ｳ縺後≠繧翫∪縺吶・,
      '縲悟ｹｴ縺ｫ荳蠎ｦ縺ｮ螟ｧ繝√Ε繝ｳ繧ｹ縺ｧ縺吶・
    ],
    aiSummary: '蜈ｨ蠎苓・蜿ょ刈縺ｮ螟ｧ蝙九う繝吶Φ繝医〒縺ｯ縲∫ｵｱ荳縺輔ｌ縺溷｣ｰ縺九￠繝代ち繝ｼ繝ｳ縺ｨ迚ｹ蜈ｸ豢ｻ逕ｨ縺梧・蜉溘・骰ｵ縺ｨ縺ｪ縺｣縺ｦ縺・∪縺吶ゅ♀螳｢讒倥・雉ｼ雋ｷ諢乗ｬｲ縺碁ｫ倥∪繧区凾譛溘ｒ豢ｻ逕ｨ縺励◆遨肴･ｵ逧・↑繧｢繝励Ο繝ｼ繝√′蜉ｹ譫懃噪縺ｧ縺吶・
  },
  {
    id: '3',
    name: '繝舌Ξ繝ｳ繧ｿ繧､繝ｳ繝輔ぉ繧｢',
    description: '繝舌Ξ繝ｳ繧ｿ繧､繝ｳ繧ｷ繝ｼ繧ｺ繝ｳ縺ｮ迚ｹ蛻･莨∫判縲ゅぐ繝輔ヨ髴隕√ｒ迢吶▲縺溘き繝ｼ繝牙哨繧ｳ繝溷ｼｷ蛹・,
    startDate: new Date('2024-02-01'),
    endDate: new Date('2024-02-14'),
    status: 'active',
    tags: ['#繝舌Ξ繝ｳ繧ｿ繧､繝ｳ', '#繧ｮ繝輔ヨ', '#蟄｣遽繧､繝吶Φ繝・, '#繧ｫ繝・・繝ｫ'],
    totalPosts: 8,
    totalViews: 234,
    totalReactions: 45,
    stores: ['貂玖ｰｷ蠎・, '譁ｰ螳ｿ蠎・, '豎陲句ｺ・],
    bestPractices: [],
    successPatterns: [
      '繧ｮ繝輔ヨ髴隕√ｒ諢剰ｭ倥＠縺溘・繧｢謠先｡・,
      '迚ｹ蛻･諢溘ｒ貍泌・縺吶ｋ繧ｫ繝ｼ繝臥音蜈ｸ縺ｮ邏ｹ莉・,
      '繧ｫ繝・・繝ｫ繧・ｮｶ譌城｣繧後∈縺ｮ貂ｩ縺九＞謗･螳｢'
    ],
    keyPhrases: [
      '縲後・繝ｬ繧ｼ繝ｳ繝医↓縺ｴ縺｣縺溘ｊ縺ｮ迚ｹ蜈ｸ縺後≠繧翫∪縺吶・,
      '縲後き繝ｼ繝峨′縺ゅｌ縺ｰ谺｡蝗槭ｂ縺雁ｾ励↓縺泌茜逕ｨ縺・◆縺縺代∪縺吶・,
      '縲後ヰ繝ｬ繝ｳ繧ｿ繧､繝ｳ髯仙ｮ壹・繝昴う繝ｳ繝磯ｄ蜈・く繝｣繝ｳ繝壹・繝ｳ荳ｭ縺ｧ縺吶・
    ],
    aiSummary: '繧ｮ繝輔ヨ髴隕√′鬮倥∪繧九ヰ繝ｬ繝ｳ繧ｿ繧､繝ｳ繧ｷ繝ｼ繧ｺ繝ｳ縺ｯ縲√き繝・・繝ｫ繧・ヵ繧｡繝溘Μ繝ｼ螻､縺ｸ縺ｮ繧｢繝励Ο繝ｼ繝√′蜉ｹ譫懃噪縺ｧ縺吶ら音蛻･諢溘ｒ貍泌・縺吶ｋ螢ｰ縺九￠縺ｨ繝壹い謠先｡医′謌仙粥縺ｮ繝昴う繝ｳ繝医〒縺吶・
  },
  {
    id: '4',
    name: '繝√ぉ繝ｳ繧ｽ繝ｼ繝槭Φ繧ｳ繝ｩ繝・,
    description: '螟ｧ莠ｺ豌励い繝九Γ縲後メ繧ｧ繝ｳ繧ｽ繝ｼ繝槭Φ縲阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝医る剞螳壹げ繝・ぜ縺ｨ迚ｹ蜈ｸ貅霈・,
    startDate: new Date('2024-01-20'),
    endDate: new Date('2024-03-31'),
    status: 'active',
    tags: ['#繝√ぉ繝ｳ繧ｽ繝ｼ繝槭Φ', '#繧｢繝九Γ繧ｳ繝ｩ繝・, '#髯仙ｮ壹げ繝・ぜ', '#闍･蟷ｴ螻､'],
    totalPosts: 15,
    totalViews: 567,
    totalReactions: 102,
    stores: ['繧｢繝九Γ繧､繝域ｸ玖ｰｷ蠎・, '繧｢繝九Γ繧､繝域眠螳ｿ蠎・, '繧｢繝九Γ繧､繝域ｱ陲句ｺ・],
    bestPractices: mockCommunityPosts.slice(0, 1),
    successPatterns: [
      '繝輔ぃ繝ｳ蠢・炊繧堤炊隗｣縺励◆蜈ｱ諢溽噪繧｢繝励Ο繝ｼ繝・,
      '繧ｳ繝ｩ繝憺剞螳夂音蜈ｸ繧呈ｴｻ逕ｨ縺励◆謠先｡・,
      '菴懷刀縺ｸ縺ｮ諢帙ｒ蟆企㍾縺励◆荳∝ｯｧ縺ｪ謗･螳｢'
    ],
    keyPhrases: [
      '縲後メ繧ｧ繝ｳ繧ｽ繝ｼ繝槭Φ繝輔ぃ繝ｳ縺ｧ縺吶°・滄剞螳夂音蜈ｸ縺後≠繧九ｓ縺ｧ縺吶・,
      '縲梧ｬ｡縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝医〒繧ゅ♀蠕励↓菴ｿ縺医∪縺吶ｈ縲・,
      '縲後き繝ｼ繝我ｼ壼藤讒倥□縺代・蜈郁｡瑚ｲｩ螢ｲ繧ゅ≠繧翫∪縺吶・
    ],
    aiSummary: '繧｢繝九Γ繝輔ぃ繝ｳ縺ｸ縺ｮ繧｢繝励Ο繝ｼ繝√〒縺ｯ縲∽ｽ懷刀縺ｸ縺ｮ逅・ｧ｣縺ｨ蜈ｱ諢溘′骰ｵ縺ｨ縺ｪ繧翫∪縺吶る剞螳壽─縺ｨ迚ｹ蛻･諢溘ｒ貍泌・縺吶ｋ縺薙→縺ｧ閾ｪ辟ｶ縺ｪ繧ｫ繝ｼ繝画署譯医↓縺､縺ｪ縺後▲縺ｦ縺・∪縺吶・
  },
  {
    id: '5',
    name: '繧ｹ繝励Μ繝ｳ繧ｰ繧ｻ繝ｼ繝ｫ2024',
    description: '譏･縺ｮ螟ｧ蝙九そ繝ｼ繝ｫ繧､繝吶Φ繝医よ眠逕滓ｴｻ蠢懈抄繧ｭ繝｣繝ｳ繝壹・繝ｳ',
    startDate: new Date('2024-03-01'),
    endDate: new Date('2024-03-31'),
    status: 'active',
    tags: ['#繧ｹ繝励Μ繝ｳ繧ｰ繧ｻ繝ｼ繝ｫ', '#譁ｰ逕滓ｴｻ', '#螟ｧ蝙九そ繝ｼ繝ｫ', '#蜈ｨ蠎苓・'],
    totalPosts: 22,
    totalViews: 892,
    totalReactions: 156,
    stores: ['蜈ｨ蠎苓・'],
    bestPractices: mockCommunityPosts.slice(1, 3),
    successPatterns: [
      '譁ｰ逕滓ｴｻ髴隕√ｒ謐峨∴縺溽ｩ肴･ｵ逧・↑謠先｡・,
      '繧ｻ繝ｼ繝ｫ迚ｹ蜈ｸ縺ｨ繧ｫ繝ｼ繝臥音蜈ｸ縺ｮ邨・∩蜷医ｏ縺幄ｨｴ豎・,
      '雉ｼ雋ｷ諢乗ｬｲ縺ｮ鬮倥＞縺雁ｮ｢讒倥∈縺ｮ蜉ｹ譫懃噪縺ｪ繧｢繝励Ο繝ｼ繝・
    ],
    keyPhrases: [
      '縲梧眠逕滓ｴｻ縺ｮ貅門ｙ縺ｫ繧ｫ繝ｼ繝峨′縺ゅｋ縺ｨ萓ｿ蛻ｩ縺ｧ縺吶ｈ縲・,
      '縲後そ繝ｼ繝ｫ萓｡譬ｼ縺九ｉ縺輔ｉ縺ｫ繝昴う繝ｳ繝磯ｄ蜈・′縺ゅｊ縺ｾ縺吶・,
      '縲御ｻ雁ｾ後・縺願ｲｷ縺・黄縺ｧ縺壹▲縺ｨ縺雁ｾ励↓縺ｪ繧翫∪縺吶・
    ],
    aiSummary: '譁ｰ逕滓ｴｻ繧ｷ繝ｼ繧ｺ繝ｳ縺ｯ雉ｼ雋ｷ諢乗ｬｲ縺碁ｫ倥∪繧区凾譛溘〒縺吶ゅそ繝ｼ繝ｫ迚ｹ蜈ｸ縺ｨ繧ｫ繝ｼ繝臥音蜈ｸ繧堤ｵ・∩蜷医ｏ縺帙◆謠先｡医′蜉ｹ譫懃噪縺ｧ縲・聞譛溽噪縺ｪ繝｡繝ｪ繝・ヨ繧剃ｼ昴∴繧九％縺ｨ縺梧・蜉溘・繝昴う繝ｳ繝医〒縺吶・
  },
  {
    id: '6',
    name: '謗ｨ縺励・蟄舌さ繝ｩ繝懊ヵ繧ｧ繧｢',
    description: '隧ｱ鬘梧ｲｸ鬨ｰ荳ｭ縲梧耳縺励・蟄舌阪→縺ｮ繧ｳ繝ｩ繝懊Ξ繝ｼ繧ｷ繝ｧ繝ｳ繧､繝吶Φ繝・,
    startDate: new Date('2024-02-15'),
    endDate: new Date('2024-04-15'),
    status: 'active',
    tags: ['#謗ｨ縺励・蟄・, '#繧｢繝九Γ繧ｳ繝ｩ繝・, '#闍･蟷ｴ螻､', '#SNS譏縺・],
    totalPosts: 18,
    totalViews: 678,
    totalReactions: 134,
    stores: ['繧｢繝九Γ繧､繝域ｸ玖ｰｷ蠎・, '繧｢繝九Γ繧､繝域眠螳ｿ蠎・, '繧｢繝九Γ繧､繝域ｱ陲句ｺ・, '繧｢繝九Γ繧､繝育ｧ玖痩蜴溷ｺ・],
    bestPractices: [],
    successPatterns: [
      'SNS荳紋ｻ｣繧呈э隴倥＠縺溘ョ繧ｸ繧ｿ繝ｫ迚ｹ蜈ｸ縺ｮ險ｴ豎・,
      '繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ莠ｺ豌励ｒ豢ｻ逕ｨ縺励◆螢ｰ縺九￠',
      '蜀咏悄謦ｮ蠖ｱ繧ｹ繝昴ャ繝医〒縺ｮ閾ｪ辟ｶ縺ｪ謗･螳｢'
    ],
    keyPhrases: [
      '縲梧耳縺励・蟄舌ヵ繧｡繝ｳ縺ｮ譁ｹ縺ｫ螟ｧ莠ｺ豌励・迚ｹ蜈ｸ縺ｧ縺吶・,
      '縲後き繝ｼ繝蛾剞螳壹・繝・ず繧ｿ繝ｫ迚ｹ蜈ｸ繧ゅ≠繧翫∪縺吶ｈ縲・,
      '縲郡NS縺ｧ繧ｷ繧ｧ繧｢縺吶ｋ縺ｨ迚ｹ蜈ｸ縺後≠繧翫∪縺吶・
    ],
    aiSummary: 'SNS荳紋ｻ｣縺悟､壹＞闍･蟷ｴ螻､繧､繝吶Φ繝医〒縺ｯ縲√ョ繧ｸ繧ｿ繝ｫ迚ｹ蜈ｸ繧・剞螳壽─縺碁㍾隕√〒縺吶ょ・逵滓聴蠖ｱ縺ｪ縺ｩ縺ｮ菴馴ｨ薙→邨・∩蜷医ｏ縺帙◆閾ｪ辟ｶ縺ｪ繧｢繝励Ο繝ｼ繝√′蜉ｹ譫懃噪縺ｧ縺吶・
  },
  {
    id: '7',
    name: '繝輔ぃ繝溘Μ繝ｼ繝輔ぉ繧ｹ繧ｿ',
    description: '螳ｶ譌城｣繧悟髄縺代・螟ｧ蝙九う繝吶Φ繝医りｦｪ蟄舌〒讌ｽ縺励ａ繧倶ｼ∫判貅霈・,
    startDate: new Date('2024-03-10'),
    endDate: new Date('2024-03-24'),
    status: 'active',
    tags: ['#繝輔ぃ繝溘Μ繝ｼ', '#隕ｪ蟄・, '#繧ｭ繝・ぜ', '#菴馴ｨ灘梛'],
    totalPosts: 10,
    totalViews: 345,
    totalReactions: 67,
    stores: ['繝槭Ν繧､貂玖ｰｷ蠎・, '繝槭Ν繧､譁ｰ螳ｿ蠎・, '繝槭Ν繧､譛画･ｽ逕ｺ蠎・],
    bestPractices: [],
    successPatterns: [
      '螳ｶ譌丞・菴薙・繝｡繝ｪ繝・ヨ繧定ｨｴ豎ゅ☆繧区署譯・,
      '蟄占ご縺ｦ荳紋ｻ｣蜷代￠縺ｮ迚ｹ蜈ｸ隱ｬ譏・,
      '螳牙ｿ・─繧剃ｸ弱∴繧倶ｸ∝ｯｧ縺ｪ隱ｬ譏・
    ],
    keyPhrases: [
      '縲後♀蟄先ｧ伜髄縺代・迚ｹ蜈ｸ繧ゅ＃逕ｨ諢上＠縺ｦ縺・∪縺吶・,
      '縲悟ｮｶ譌上き繝ｼ繝峨ｂ縺雁ｾ励↓菴懊ｌ縺ｾ縺吶・,
      '縲梧ｬ｡蝗槭・縺疲擂蠎玲凾縺ｫ繧ゅ・繧､繝ｳ繝医′菴ｿ縺医∪縺吶・
    ],
    aiSummary: '繝輔ぃ繝溘Μ繝ｼ螻､縺ｫ縺ｯ縲∝ｮｶ譌丞・菴薙・繝｡繝ｪ繝・ヨ縺ｨ螳牙ｿ・─縺ｮ險ｴ豎ゅ′驥崎ｦ√〒縺吶ょｭ占ご縺ｦ荳紋ｻ｣蜷代￠縺ｮ迚ｹ蜈ｸ繧剃ｸ∝ｯｧ縺ｫ隱ｬ譏弱☆繧九％縺ｨ縺ｧ菫｡鬆ｼ繧貞ｾ励ｉ繧後∪縺吶・
  },
  // 2023蟷ｴ縺ｮ繧､繝吶Φ繝・  {
    id: '8',
    name: '鬯ｼ貊・・蛻・ヵ繧ｧ繧｢2023',
    description: '遉ｾ莨夂樟雎｡縺ｨ縺ｪ縺｣縺溘い繝九Γ縲碁ｬｼ貊・・蛻・阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2023-10-01'),
    endDate: new Date('2023-11-30'),
    status: 'completed',
    tags: ['#鬯ｼ貊・・蛻・, '#繧｢繝九Γ繧ｳ繝ｩ繝・, '#髯仙ｮ壹げ繝・ぜ'],
    totalPosts: 45,
    totalViews: 2100,
    totalReactions: 410,
    stores: ['譛ｭ蟷悟ｺ・, '莉吝床蠎・, '譚ｱ莠ｬ蠎・, '蜷榊商螻句ｺ・, '螟ｧ髦ｪ蠎・, '遖丞ｲ｡蠎・],
    bestPractices: [],
    successPatterns: ['繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ莠ｺ豌励ｒ豢ｻ逕ｨ縺励◆螢ｰ縺九￠', '髯仙ｮ壽─縺ｮ貍泌・', '繝輔ぃ繝ｳ蠢・炊縺ｮ逅・ｧ｣'],
    keyPhrases: ['縲梧耳縺励く繝｣繝ｩ縺ｮ繧ｰ繝・ぜ谿九ｊ繧上★縺九〒縺吶・, '縲梧ｬ｡蝗槫・闕ｷ縺ｯ譛ｪ螳壹〒縺吶・],
    aiSummary: '鬯ｼ貊・・蛻・ヶ繝ｼ繝繧呈ｴｻ逕ｨ縺励◆謌仙粥莠倶ｾ九′螟壽焚縲る剞螳壽─縺ｮ險ｴ豎ゅ′蜉ｹ譫懃噪縺ｧ縺励◆縲・
  },
  {
    id: '9',
    name: '蜴溽･榲怜､ｧ髦ｪ繧ｳ繝ｩ繝懊ヵ繧ｧ繧ｹ繧ｿ2023',
    description: '荳也阜逧・ｺｺ豌励ご繝ｼ繝縲悟次逾槭阪→縺ｮ繧ｳ繝ｩ繝懊Ξ繝ｼ繧ｷ繝ｧ繝ｳ繧､繝吶Φ繝・,
    startDate: new Date('2023-07-01'),
    endDate: new Date('2023-08-31'),
    status: 'completed',
    tags: ['#蜴溽･・, '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#螟ｧ髦ｪ髯仙ｮ・, '#髯仙ｮ壹げ繝・ぜ'],
    totalPosts: 32,
    totalViews: 890,
    totalReactions: 145,
    stores: ['螟ｧ髦ｪ譴・伐蠎・, '螟ｧ髦ｪ髮｣豕｢蠎・, '螟ｧ髦ｪ螟ｩ邇句ｯｺ蠎・],
    bestPractices: [],
    successPatterns: ['繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ蜈ｱ諢溘い繝励Ο繝ｼ繝・, '繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ繧ｰ繝・ぜ縺ｮ髯仙ｮ壽─貍泌・'],
    keyPhrases: ['縲梧耳縺励く繝｣繝ｩ縺ｮ繧ｰ繝・ぜ蜈･闕ｷ縺励∪縺励◆縲・, '縲悟次逾槭ヵ繧｡繝ｳ縺ｮ譁ｹ縺ｫ螟ｧ莠ｺ豌励〒縺吶・],
    aiSummary: '繧ｲ繝ｼ繝繝輔ぃ繝ｳ螻､縺ｸ縺ｮ逅・ｧ｣繧堤､ｺ縺励◆謠先｡医′蜉ｹ譫懃噪縺ｧ縺励◆縲・
  },
  {
    id: '10',
    name: '繝帙Ο繝ｩ繧､繝坊tuber繝上Ο繧ｦ繧｣繝ｳ繝輔ぉ繧ｹ繧ｿ2023',
    description: '莠ｺ豌遊tuber繧ｰ繝ｫ繝ｼ繝励後・繝ｭ繝ｩ繧､繝悶阪→縺ｮ繝上Ο繧ｦ繧｣繝ｳ繧ｳ繝ｩ繝・,
    startDate: new Date('2023-10-01'),
    endDate: new Date('2023-10-31'),
    status: 'completed',
    tags: ['#繝帙Ο繝ｩ繧､繝・, '#Vtuber', '#繝上Ο繧ｦ繧｣繝ｳ', '#髯仙ｮ壹げ繝・ぜ'],
    totalPosts: 28,
    totalViews: 756,
    totalReactions: 132,
    stores: ['蜈ｨ蠎苓・'],
    bestPractices: [],
    successPatterns: ['Vtuber繝輔ぃ繝ｳ縺ｸ縺ｮ荳∝ｯｧ縺ｪ蟇ｾ蠢・, '繧ｳ繝ｩ繝憺剞螳夂音蜈ｸ縺ｮ險ｴ豎・],
    keyPhrases: ['縲梧耳縺励・髯仙ｮ壹げ繝・ぜ縺ゅｊ縺ｾ縺吶ｈ縲・, '縲後ワ繝ｭ繧ｦ繧｣繝ｳ髯仙ｮ壹ョ繧ｶ繧､繝ｳ縺ｧ縺吶・],
    aiSummary: 'Vtuber繝輔ぃ繝ｳ螻､縺ｸ縺ｮ逅・ｧ｣繧堤､ｺ縺励◆謗･螳｢縺梧・蜉溘・繝昴う繝ｳ繝医・
  },
  {
    id: '11',
    name: '蛻晞浹繝溘けﾃ鈴妛繝溘け繝輔ぉ繧｢2023',
    description: '蛹玲ｵｷ驕馴剞螳壹碁妛繝溘け縲阪→縺ｮ繧ｳ繝ｩ繝懊Ξ繝ｼ繧ｷ繝ｧ繝ｳ繧､繝吶Φ繝・,
    startDate: new Date('2023-12-01'),
    endDate: new Date('2024-02-28'),
    status: 'completed',
    tags: ['#蛻晞浹繝溘け', '#髮ｪ繝溘け', '#Vocaloid', '#蛹玲ｵｷ驕馴剞螳・],
    totalPosts: 19,
    totalViews: 521,
    totalReactions: 98,
    stores: ['譛ｭ蟷悟ｺ・, '譛ｭ蟷後せ繝・Λ繝励Ξ繧､繧ｹ蠎・],
    bestPractices: [],
    successPatterns: ['蝨ｰ蝓滄剞螳壹く繝｣繝ｩ繧ｯ繧ｿ繝ｼ縺ｮ豢ｻ逕ｨ', '繝懊き繝ｭ繝輔ぃ繝ｳ縺ｸ縺ｮ蜈ｱ諢・],
    keyPhrases: ['縲碁妛繝溘け髯仙ｮ壹げ繝・ぜ縺ｧ縺吶・, '縲悟圏豬ｷ驕薙〒縺励°雋ｷ縺医∪縺帙ｓ縲・],
    aiSummary: '蝨ｰ蝓滄剞螳壹く繝｣繝ｩ繧ｯ繧ｿ繝ｼ縺ｮ迚ｹ蛻･諢溘ｒ豢ｻ縺九＠縺滓署譯医′謌仙粥縺励※縺・∪縺吶・
  },
  {
    id: '12',
    name: '縺ｫ縺倥＆繧薙§ﾃ怜錐蜿､螻九さ繝ｩ繝懊ヵ繧ｧ繧｢2023',
    description: '螟ｧ莠ｺ豌遊tuber繧ｰ繝ｫ繝ｼ繝励後↓縺倥＆繧薙§縲阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2023-09-01'),
    endDate: new Date('2023-09-30'),
    status: 'completed',
    tags: ['#縺ｫ縺倥＆繧薙§', '#Vtuber', '#蜷榊商螻矩剞螳・, '#髯仙ｮ壹げ繝・ぜ'],
    totalPosts: 24,
    totalViews: 612,
    totalReactions: 118,
    stores: ['蜷榊商螻句ｺ・, '蜷榊商螻区・ｺ・],
    bestPractices: [],
    successPatterns: ['Vtuber繝輔ぃ繝ｳ繧ｳ繝溘Η繝九ユ繧｣縺ｸ縺ｮ逅・ｧ｣', '髯仙ｮ壽─縺ｮ貍泌・'],
    keyPhrases: ['縲梧耳縺励Λ繧､繝舌・縺ｮ繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲悟錐蜿､螻矩剞螳壹ョ繧ｶ繧､繝ｳ縺ｧ縺吶・],
    aiSummary: 'Vtuber繝輔ぃ繝ｳ縺ｮ辭ｱ驥上ｒ逅・ｧ｣縺励◆謠先｡医′蜉ｹ譫懃噪縺ｧ縺励◆縲・
  },
  // 2022蟷ｴ縺ｮ繧､繝吶Φ繝・  {
    id: '13',
    name: '譚ｱ莠ｬ繝ｪ繝吶Φ繧ｸ繝｣繝ｼ繧ｺﾃ玲丼繝輔ぉ繧｢2022',
    description: '莠ｺ豌励い繝九Γ縲梧擲莠ｬ蜊阪Μ繝吶Φ繧ｸ繝｣繝ｼ繧ｺ縲阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2022-03-01'),
    endDate: new Date('2022-04-30'),
    status: 'completed',
    tags: ['#譚ｱ莠ｬ繝ｪ繝吶Φ繧ｸ繝｣繝ｼ繧ｺ', '#繧｢繝九Γ繧ｳ繝ｩ繝・, '#譏･', '#髯仙ｮ壹げ繝・ぜ'],
    totalPosts: 38,
    totalViews: 1245,
    totalReactions: 256,
    stores: ['貂玖ｰｷ蠎・, '譁ｰ螳ｿ蠎・, '豎陲句ｺ・, '譛画･ｽ逕ｺ蠎・],
    bestPractices: [],
    successPatterns: ['繧｢繝九Γ繝輔ぃ繝ｳ縺ｸ縺ｮ蜈ｱ諢溽噪繧｢繝励Ο繝ｼ繝・, '繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ莠ｺ豌励・豢ｻ逕ｨ'],
    keyPhrases: ['縲後・繧､繧ｭ繝ｼ縺ｮ繧ｰ繝・ぜ蜈･闕ｷ縺励∪縺励◆縲・, '縲碁剞螳壹ョ繧ｶ繧､繝ｳ縺ｧ縺吶・],
    aiSummary: '闍･蟷ｴ螻､縺ｫ莠ｺ豌励・繧｢繝九Γ繧呈ｴｻ逕ｨ縺励◆謠先｡医′謌仙粥縺励※縺・∪縺吶・
  },
  {
    id: '14',
    name: '繝｢繝ｳ繧ｹ繧ｿ繝ｼ繝上Φ繧ｿ繝ｼﾃ礼ｦ丞ｲ｡繧ｳ繝ｩ繝・022',
    description: '螟ｧ莠ｺ豌励ご繝ｼ繝縲後Δ繝ｳ繧ｹ繧ｿ繝ｼ繝上Φ繧ｿ繝ｼ縲阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2022-05-01'),
    endDate: new Date('2022-05-31'),
    status: 'completed',
    tags: ['#繝｢繝ｳ繝上Φ', '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#遖丞ｲ｡髯仙ｮ・, '#髯仙ｮ壹げ繝・ぜ'],
    totalPosts: 22,
    totalViews: 689,
    totalReactions: 134,
    stores: ['遖丞ｲ｡螟ｩ逾槫ｺ・, '遖丞ｲ｡蜊壼､壼ｺ・],
    bestPractices: [],
    successPatterns: ['繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ逅・ｧ｣繧堤､ｺ縺・, '繝上Φ繧ｿ繝ｼ縺ｸ縺ｮ蜈ｱ諢・],
    keyPhrases: ['縲後Δ繝ｳ繝上Φ螂ｽ縺阪・譁ｹ縺ｫ莠ｺ豌励〒縺吶・, '縲碁剞螳壽ｭｦ蝎ｨ繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・],
    aiSummary: '繧ｲ繝ｼ繝繝輔ぃ繝ｳ螻､縺ｸ縺ｮ逅・ｧ｣繧堤､ｺ縺励◆謗･螳｢縺悟柑譫懃噪縺ｧ縺励◆縲・
  },
  {
    id: '15',
    name: '繝ｩ繝悶Λ繧､繝・繧ｵ繝ｳ繧ｷ繝｣繧､繝ｳ!!ﾃ礼･槫･亥ｷ・022',
    description: '莠ｺ豌励い繝九Γ縲後Λ繝悶Λ繧､繝・繧ｵ繝ｳ繧ｷ繝｣繧､繝ｳ!!縲阪→縺ｮ繧ｳ繝ｩ繝・,
    startDate: new Date('2022-07-15'),
    endDate: new Date('2022-08-31'),
    status: 'completed',
    tags: ['#繝ｩ繝悶Λ繧､繝・, '#繧｢繝九Γ繧ｳ繝ｩ繝・, '#逾槫･亥ｷ・, '#螟・],
    totalPosts: 27,
    totalViews: 743,
    totalReactions: 156,
    stores: ['讓ｪ豬懷ｺ・, '蟾晏ｴ主ｺ・],
    bestPractices: [],
    successPatterns: ['繧｢繝九Γ閨門慍蟾｡遉ｼ螳｢縺ｸ縺ｮ蟇ｾ蠢・, '繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ諢帙・蟆企㍾'],
    keyPhrases: ['縲梧耳縺励Γ繝ｳ縺ｮ繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲碁剞螳夂ｼｶ繝舌ャ繧ｸ蜈･闕ｷ縺励∪縺励◆縲・],
    aiSummary: '繧｢繝九Γ繝輔ぃ繝ｳ縺ｮ閨門慍蟾｡遉ｼ髴隕√ｒ謐峨∴縺滓署譯医′謌仙粥縲・
  },
  {
    id: '16',
    name: '繝昴こ繝｢繝ｳﾃ怜鴻闡峨が繝ｼ繧ｿ繝繝輔ぉ繧｢2022',
    description: '螟ｧ莠ｺ豌励く繝｣繝ｩ繧ｯ繧ｿ繝ｼ縲後・繧ｱ繝｢繝ｳ縲阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2022-10-01'),
    endDate: new Date('2022-11-30'),
    status: 'completed',
    tags: ['#繝昴こ繝｢繝ｳ', '#繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ繧ｳ繝ｩ繝・, '#蜊・痩', '#遘・],
    totalPosts: 18,
    totalViews: 456,
    totalReactions: 89,
    stores: ['蜊・痩蠎・, '闊ｹ讖句ｺ・],
    bestPractices: [],
    successPatterns: ['蟷・ｺ・＞蟷ｴ鮨｢螻､縺ｸ縺ｮ繧｢繝励Ο繝ｼ繝・, '繝輔ぃ繝溘Μ繝ｼ螻､縺ｸ縺ｮ謠先｡・],
    keyPhrases: ['縲後ヴ繧ｫ繝√Η繧ｦ繧ｰ繝・ぜ螟ｧ莠ｺ豌励〒縺吶・, '縲後♀蟄先ｧ倥↓繧ょ万縺ｰ繧後∪縺吶・],
    aiSummary: '蜈ｨ蟷ｴ鮨｢螻､縺ｫ莠ｺ豌励・繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ繧呈ｴｻ逕ｨ縺励◆謠先｡医′蜉ｹ譫懃噪縺ｧ縺励◆縲・
  },
  {
    id: '17',
    name: 'SPYﾃ友AMILY繧ｳ繝ｩ繝・022',
    description: '螟ｧ莠ｺ豌励い繝九Γ縲郡PYﾃ友AMILY縲阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2022-06-01'),
    endDate: new Date('2022-07-31'),
    status: 'completed',
    tags: ['#SPYﾃ友AMILY', '#繧｢繝九Γ繧ｳ繝ｩ繝・, '#髯仙ｮ壹げ繝・ぜ'],
    totalPosts: 52,
    totalViews: 2340,
    totalReactions: 489,
    stores: ['蜈ｨ蠎苓・'],
    bestPractices: [],
    successPatterns: ['螳ｶ譌丞ｱ､縺ｸ縺ｮ險ｴ豎・, '繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ繧ｰ繝・ぜ縺ｮ髯仙ｮ壽─貍泌・'],
    keyPhrases: ['縲後い繝ｼ繝九Ε縺ｮ繧ｰ繝・ぜ螟ｧ莠ｺ豌励〒縺吶・],
    aiSummary: '螳ｶ譌上〒讌ｽ縺励ａ繧九い繝九Γ縺ｨ縺・≧迚ｹ諤ｧ繧呈ｴｻ縺九＠縺滓署譯医′謌仙粥縲・
  },
  // 2024蟷ｴ霑ｽ蜉繧､繝吶Φ繝茨ｼ域ｧ倥・↑驛ｽ驕灘ｺ懃恁・・  {
    id: '18',
    name: '繧ｦ繝槫ｨ佚怜涵邇峨せ繝励Μ繝ｳ繧ｰ繝輔ぉ繧｢2024',
    description: '螟ｧ莠ｺ豌励ご繝ｼ繝縲後え繝槫ｨ倥阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2024-04-01'),
    endDate: new Date('2024-04-30'),
    status: 'upcoming',
    tags: ['#繧ｦ繝槫ｨ・, '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#蝓ｼ邇・, '#譏･'],
    totalPosts: 0,
    totalViews: 0,
    totalReactions: 0,
    stores: ['螟ｧ螳ｮ蠎・, '蟾晁ｶ雁ｺ・, '豬ｦ蜥悟ｺ・],
    bestPractices: [],
    successPatterns: [],
    keyPhrases: [],
    aiSummary: ''
  },
  {
    id: '19',
    name: 'Fateﾃ嶺ｺｬ驛ｽ譯懊ヵ繧ｧ繧ｹ繝・ぅ繝舌Ν2024',
    description: '繧｢繝九Γ繝ｻ繧ｲ繝ｼ繝縲熊ate縲阪す繝ｪ繝ｼ繧ｺ縺ｨ縺ｮ繧ｳ繝ｩ繝・,
    startDate: new Date('2024-03-20'),
    endDate: new Date('2024-04-10'),
    status: 'upcoming',
    tags: ['#Fate', '#繧｢繝九Γ繧ｳ繝ｩ繝・, '#莠ｬ驛ｽ', '#譏･'],
    totalPosts: 0,
    totalViews: 0,
    totalReactions: 0,
    stores: ['莠ｬ驛ｽ蠎・, '莠ｬ驛ｽ豐ｳ蜴溽伴蠎・],
    bestPractices: [],
    successPatterns: [],
    keyPhrases: [],
    aiSummary: ''
  },
  {
    id: '20',
    name: '繧ｬ繝ｳ繝繝ﾃ怜ｺ・ｳｶ繧ｵ繝槭・繝輔ぉ繧｢2023',
    description: '莠ｺ豌励い繝九Γ縲梧ｩ溷虚謌ｦ螢ｫ繧ｬ繝ｳ繝繝縲阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2023-08-01'),
    endDate: new Date('2023-08-15'),
    status: 'completed',
    tags: ['#繧ｬ繝ｳ繝繝', '#繧｢繝九Γ繧ｳ繝ｩ繝・, '#蠎・ｳｶ', '#螟・],
    totalPosts: 16,
    totalViews: 432,
    totalReactions: 87,
    stores: ['蠎・ｳｶ蠎・, '蠎・ｳｶ蜈ｫ荳∝蠎・],
    bestPractices: [],
    successPatterns: ['蟷・ｺ・＞荳紋ｻ｣縺ｮ繧ｬ繝ｳ繝繝繝輔ぃ繝ｳ縺ｸ縺ｮ蟇ｾ蠢・],
    keyPhrases: ['縲後ぎ繝ｳ繝励Λ螂ｽ縺阪・譁ｹ縺ｫ莠ｺ豌励〒縺吶・, '縲碁剞螳壹ョ繧ｶ繧､繝ｳ縺ｧ縺吶・],
    aiSummary: '蟷・ｺ・＞荳紋ｻ｣縺ｫ莠ｺ豌励・繧｢繝九Γ繧呈ｴｻ逕ｨ縺励◆謠先｡医′謌仙粥縺励∪縺励◆縲・
  },
  {
    id: '21',
    name: '繝悶Ν繝ｼ繧｢繝ｼ繧ｫ繧､繝姪嶺ｻ吝床繧ｳ繝ｩ繝・023',
    description: '莠ｺ豌励せ繝槭・繧ｲ繝ｼ繝縲後ヶ繝ｫ繝ｼ繧｢繝ｼ繧ｫ繧､繝悶阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2023-08-06'),
    endDate: new Date('2023-08-08'),
    status: 'completed',
    tags: ['#繝悶Ν繧｢繧ｫ', '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#莉吝床', '#螟・],
    totalPosts: 21,
    totalViews: 578,
    totalReactions: 112,
    stores: ['莉吝床蠎・, '莉吝床豕牙ｺ・],
    bestPractices: [],
    successPatterns: ['繧ｹ繝槭・繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ逅・ｧ｣', '謗ｨ縺励く繝｣繝ｩ縺ｸ縺ｮ蜈ｱ諢・],
    keyPhrases: ['縲悟・逕溘・剞螳壹げ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲梧耳縺礼函蠕偵・繧ｰ繝・ぜ蜈･闕ｷ縺励∪縺励◆縲・],
    aiSummary: '繧ｲ繝ｼ繝繧ｳ繝溘Η繝九ユ繧｣縺ｸ縺ｮ逅・ｧ｣繧堤､ｺ縺励◆謠先｡医′螂ｽ隧輔〒縺励◆縲・
  },
  {
    id: '22',
    name: '繝ｯ繝ｳ繝斐・繧ｹﾃ玲ｲ也ｸ・し繝槭・繝輔ぉ繧｢2023',
    description: '螟ｧ莠ｺ豌励い繝九Γ縲薫NE PIECE縲阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2023-06-01'),
    endDate: new Date('2023-08-31'),
    status: 'completed',
    tags: ['#繝ｯ繝ｳ繝斐・繧ｹ', '#繧｢繝九Γ繧ｳ繝ｩ繝・, '#豐也ｸ・, '#螟・],
    totalPosts: 25,
    totalViews: 692,
    totalReactions: 141,
    stores: ['驍｣隕・ｺ・],
    bestPractices: [],
    successPatterns: ['蟷・ｺ・＞荳紋ｻ｣縺ｸ縺ｮ蟇ｾ蠢・, '繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ莠ｺ豌励・豢ｻ逕ｨ'],
    keyPhrases: ['縲碁ｺｦ繧上ｉ縺ｮ荳蜻ｳ繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲碁剞螳壹ョ繧ｶ繧､繝ｳ縺ｧ縺吶・],
    aiSummary: '蝗ｽ豌醍噪繧｢繝九Γ繧呈ｴｻ逕ｨ縺励◆謠先｡医′謌仙粥縺励※縺・∪縺吶・
  },
  {
    id: '23',
    name: '繧｢繧､繝峨Ν繝槭せ繧ｿ繝ｼﾃ礼･樊虻繝輔ぉ繧｢2022',
    description: '莠ｺ豌励ご繝ｼ繝縲後い繧､繝峨Ν繝槭せ繧ｿ繝ｼ縲阪す繝ｪ繝ｼ繧ｺ縺ｨ縺ｮ繧ｳ繝ｩ繝・,
    startDate: new Date('2022-10-15'),
    endDate: new Date('2022-10-31'),
    status: 'completed',
    tags: ['#繧｢繧､繝槭せ', '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#逾樊虻', '#遘・],
    totalPosts: 29,
    totalViews: 812,
    totalReactions: 167,
    stores: ['逾樊虻蠎・, '逾樊虻荳牙ｮｮ蠎・],
    bestPractices: [],
    successPatterns: ['繝励Ο繝・Η繝ｼ繧ｵ繝ｼ縺ｸ縺ｮ蜈ｱ諢・, '謗ｨ縺励い繧､繝峨Ν縺ｸ縺ｮ逅・ｧ｣'],
    keyPhrases: ['縲梧球蠖薙い繧､繝峨Ν縺ｮ繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶ｈ縲・, '縲碁剞螳壹ョ繧ｶ繧､繝ｳ縺ｧ縺吶・],
    aiSummary: '繧｢繧､繝峨Ν繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ逅・ｧ｣繧堤､ｺ縺励◆謠先｡医′謌仙粥縺励※縺・∪縺吶・
  },
  {
    id: '24',
    name: '濶ｦ縺薙ｌﾃ玲ｨｪ豬懊さ繝ｩ繝懊ヵ繧ｧ繧ｹ2023',
    description: '莠ｺ豌励ご繝ｼ繝縲瑚襖髫翫％繧後￥縺励ｇ繧薙阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2023-02-01'),
    endDate: new Date('2023-02-28'),
    status: 'completed',
    tags: ['#濶ｦ縺薙ｌ', '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#讓ｪ豬・, '#蜀ｬ'],
    totalPosts: 33,
    totalViews: 945,
    totalReactions: 189,
    stores: ['讓ｪ豬懷ｺ・],
    bestPractices: [],
    successPatterns: ['謠千撻縺ｸ縺ｮ荳∝ｯｧ縺ｪ蟇ｾ蠢・, '濶ｦ螽倅ｺｺ豌励・豢ｻ逕ｨ'],
    keyPhrases: ['縲梧署逹｣縲∝ｫ∬襖縺ｮ繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲碁剞螳壹げ繝・ぜ縺ｧ縺吶・],
    aiSummary: '繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ逅・ｧ｣繧堤､ｺ縺励◆謗･螳｢縺悟柑譫懃噪縺ｧ縺励◆縲・
  },
  {
    id: '25',
    name: '縺｡縺・°繧湘鈴撕蟯｡繧ｳ繝ｩ繝・023',
    description: '螟ｧ莠ｺ豌励く繝｣繝ｩ繧ｯ繧ｿ繝ｼ縲後■縺・°繧上阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2023-07-01'),
    endDate: new Date('2023-08-31'),
    status: 'completed',
    tags: ['#縺｡縺・°繧・, '#繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ繧ｳ繝ｩ繝・, '#髱吝ｲ｡', '#螟・],
    totalPosts: 17,
    totalViews: 467,
    totalReactions: 91,
    stores: ['髱吝ｲ｡蠎・],
    bestPractices: [],
    successPatterns: ['逋偵＠邉ｻ繧ｭ繝｣繝ｩ縺ｮ莠ｺ豌玲ｴｻ逕ｨ', '蟷・ｺ・＞螻､縺ｸ縺ｮ繧｢繝励Ο繝ｼ繝・],
    keyPhrases: ['縲後■縺・°繧上げ繝・ぜ蜈･闕ｷ縺励∪縺励◆縲・, '縲碁剞螳壹ョ繧ｶ繧､繝ｳ縺ｧ縺吶・],
    aiSummary: '逋偵＠邉ｻ繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ縺ｮ莠ｺ豌励ｒ豢ｻ逕ｨ縺励◆謠先｡医′謌仙粥縲・
  },
  {
    id: '26',
    name: '繝励Ο繧ｸ繧ｧ繧ｯ繝医そ繧ｫ繧､ﾃ鈴聞驥弱え繧｣繝ｳ繧ｿ繝ｼ繝輔ぉ繧｢2023',
    description: '莠ｺ豌励Μ繧ｺ繝繧ｲ繝ｼ繝縲後・繝ｭ繧ｸ繧ｧ繧ｯ繝医そ繧ｫ繧､縲阪→縺ｮ繧ｳ繝ｩ繝・,
    startDate: new Date('2023-12-01'),
    endDate: new Date('2024-03-31'),
    status: 'completed',
    tags: ['#繝励Ο繧ｻ繧ｫ', '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#髟ｷ驥・, '#蜀ｬ'],
    totalPosts: 22,
    totalViews: 634,
    totalReactions: 128,
    stores: ['髟ｷ驥主ｺ・],
    bestPractices: [],
    successPatterns: ['闍･蟷ｴ螻､縺ｸ縺ｮ逅・ｧ｣', '繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ莠ｺ豌励・豢ｻ逕ｨ'],
    keyPhrases: ['縲梧耳縺励く繝｣繝ｩ縺ｮ繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲後・繝ｭ繧ｻ繧ｫ繝輔ぃ繝ｳ縺ｫ莠ｺ豌励〒縺吶・],
    aiSummary: '髻ｳ讌ｽ繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ謠先｡医′謌仙粥縺励※縺・∪縺吶・
  },
  {
    id: '27',
    name: '蟠ｩ螢翫せ繧ｿ繝ｼ繝ｬ繧､繝ｫﾃ鈴≡豐｢繧ｳ繝ｩ繝・022',
    description: '莠ｺ豌由PG繧ｲ繝ｼ繝縲悟ｴｩ螢・繧ｹ繧ｿ繝ｼ繝ｬ繧､繝ｫ縲阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2022-11-01'),
    endDate: new Date('2022-11-30'),
    status: 'completed',
    tags: ['#繧ｹ繧ｿ繝ｼ繝ｬ繧､繝ｫ', '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#驥第ｲ｢', '#遘・],
    totalPosts: 14,
    totalViews: 389,
    totalReactions: 76,
    stores: ['驥第ｲ｢蠎・],
    bestPractices: [],
    successPatterns: ['荳ｭ蝗ｽ逋ｺ繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ蟇ｾ蠢・, '繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ莠ｺ豌励・豢ｻ逕ｨ'],
    keyPhrases: ['縲梧耳縺励く繝｣繝ｩ縺ｮ繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲碁剞螳壹ョ繧ｶ繧､繝ｳ縺ｧ縺吶・],
    aiSummary: '繧ｰ繝ｭ繝ｼ繝舌Ν繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ謠先｡医′謌仙粥縲・
  },
  {
    id: '28',
    name: '縺ゅｓ縺輔ｓ縺ｶ繧九せ繧ｿ繝ｼ繧ｺﾃ玲眠貎溘ヵ繧ｧ繧｢2023',
    description: '莠ｺ豌励い繧､繝峨Ν繧ｲ繝ｼ繝縲後≠繧薙＆繧薙・繧九せ繧ｿ繝ｼ繧ｺ!縲阪→縺ｮ繧ｳ繝ｩ繝・,
    startDate: new Date('2023-10-01'),
    endDate: new Date('2023-11-30'),
    status: 'completed',
    tags: ['#縺ゅｓ繧ｹ繧ｿ', '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#譁ｰ貎・, '#遘・],
    totalPosts: 19,
    totalViews: 512,
    totalReactions: 103,
    stores: ['譁ｰ貎溷ｺ・],
    bestPractices: [],
    successPatterns: ['繧｢繧､繝峨Ν繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ逅・ｧ｣', '謗ｨ縺励Θ繝九ャ繝医∈縺ｮ蜈ｱ諢・],
    keyPhrases: ['縲梧耳縺励Θ繝九ャ繝医・繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲梧球蠖薙・繧ｰ繝・ぜ蜈･闕ｷ縺励∪縺励◆縲・],
    aiSummary: '螂ｳ諤ｧ蜷代￠繧｢繧､繝峨Ν繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ謠先｡医′蜉ｹ譫懃噪縺ｧ縺励◆縲・
  },
  {
    id: '29',
    name: '縺吶→縺ｷ繧甘怜ｲ｡螻ｱ繧ｳ繝ｩ繝懊ヵ繧ｧ繧ｹ繝・ぅ繝舌Ν2023',
    description: '莠ｺ豌玲ｭ後＞謇九げ繝ｫ繝ｼ繝励後☆縺ｨ縺ｷ繧翫阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2023-08-01'),
    endDate: new Date('2023-08-31'),
    status: 'completed',
    tags: ['#縺吶→縺ｷ繧・, '#髻ｳ讌ｽ', '#蟯｡螻ｱ', '#螟・],
    totalPosts: 16,
    totalViews: 445,
    totalReactions: 88,
    stores: ['蟯｡螻ｱ蠎・],
    bestPractices: [],
    successPatterns: ['豁後＞謇九ヵ繧｡繝ｳ縺ｸ縺ｮ逅・ｧ｣', '闍･蟷ｴ螻､縺ｸ縺ｮ蟇ｾ蠢・],
    keyPhrases: ['縲後☆縺ｨ縺ｷ繧翫げ繝・ぜ蜈･闕ｷ縺励∪縺励◆縲・, '縲梧耳縺励き繝ｩ繝ｼ縺ｮ繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・],
    aiSummary: '髻ｳ讌ｽ繧ｰ繝ｫ繝ｼ繝励ヵ繧｡繝ｳ縺ｸ縺ｮ謠先｡医′螂ｽ隧輔〒縺励◆縲・
  },
  {
    id: '30',
    name: '繝・う繧ｹ繝・ャ繝峨Ρ繝ｳ繝繝ｼ繝ｩ繝ｳ繝嘉礼・譛ｬ2022',
    description: '莠ｺ豌励ご繝ｼ繝縲後ヤ繧､繧ｹ繝・ャ繝峨Ρ繝ｳ繝繝ｼ繝ｩ繝ｳ繝峨阪→縺ｮ繧ｳ繝ｩ繝・,
    startDate: new Date('2022-09-01'),
    endDate: new Date('2022-09-30'),
    status: 'completed',
    tags: ['#繝・う繧ｹ繝・, '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#辭頑悽', '#遘・],
    totalPosts: 31,
    totalViews: 867,
    totalReactions: 178,
    stores: ['辭頑悽蠎・],
    bestPractices: [],
    successPatterns: ['螂ｳ諤ｧ蜷代￠繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ蟇ｾ蠢・, '蟇ｮ蛻･繧ｰ繝・ぜ縺ｮ謠先｡・],
    keyPhrases: ['縲梧耳縺怜ｯｮ縺ｮ繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲碁剞螳壹ョ繧ｶ繧､繝ｳ縺ｧ縺吶・],
    aiSummary: '繝・ぅ繧ｺ繝九・邉ｻ繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ謠先｡医′謌仙粥縲・
  },
  {
    id: '31',
    name: '繝舌・繝√Ε繝ｫYouTuberﾃ礼ｾ､鬥ｬ繧ｦ繧｣繝ｳ繧ｿ繝ｼ繝輔ぉ繧｢2023',
    description: '莠ｺ豌遊Tuber莠句漁謇縺ｨ縺ｮ繧ｳ繝ｩ繝懊Ξ繝ｼ繧ｷ繝ｧ繝ｳ繧､繝吶Φ繝・,
    startDate: new Date('2023-11-01'),
    endDate: new Date('2024-01-31'),
    status: 'completed',
    tags: ['#VTuber', '#驟堺ｿ｡閠・, '#鄒､鬥ｬ', '#蜀ｬ'],
    totalPosts: 13,
    totalViews: 376,
    totalReactions: 74,
    stores: ['鬮伜ｴ主ｺ・],
    bestPractices: [],
    successPatterns: ['VTuber繝輔ぃ繝ｳ縺ｸ縺ｮ逅・ｧ｣', '驟堺ｿ｡譁・喧縺ｸ縺ｮ蜈ｱ諢・],
    keyPhrases: ['縲梧耳縺励・髯仙ｮ壹げ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲碁・菫｡縺ｧ邏ｹ莉九＆繧後◆繧ｰ繝・ぜ縺ｧ縺吶・],
    aiSummary: 'VTuber譁・喧縺ｸ縺ｮ逅・ｧ｣繧堤､ｺ縺励◆謠先｡医′謌仙粥縺励※縺・∪縺吶・
  },
  {
    id: '32',
    name: '繧ｹ繝励Λ繝医ぇ繝ｼ繝ｳ3ﾃ玲・惠繝輔ぉ繧｢2024',
    description: '莠ｺ豌励ご繝ｼ繝縲後せ繝励Λ繝医ぇ繝ｼ繝ｳ3縲阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2024-01-01'),
    endDate: new Date('2024-02-29'),
    status: 'active',
    tags: ['#繧ｹ繝励Λ繝医ぇ繝ｼ繝ｳ', '#莉ｻ螟ｩ蝣・, '#譬・惠', '#蜀ｬ譏･'],
    totalPosts: 11,
    totalViews: 298,
    totalReactions: 59,
    stores: ['螳・・螳ｮ蠎・],
    bestPractices: [],
    successPatterns: ['莉ｻ螟ｩ蝣ゅヵ繧｡繝ｳ縺ｸ縺ｮ蟇ｾ蠢・, '繝輔ぃ繝溘Μ繝ｼ螻､縺ｸ縺ｮ謠先｡・],
    keyPhrases: ['縲後う繧ｫ繧ｰ繝・ぜ蜈･闕ｷ縺励∪縺励◆縲・, '縲後♀蟄先ｧ倥↓螟ｧ莠ｺ豌励〒縺吶・],
    aiSummary: '莉ｻ螟ｩ蝣ゅご繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ謠先｡医′蜉ｹ譫懃噪縲・
  },
  {
    id: '33',
    name: '繧｢繝ｼ繧ｯ繝翫う繝・苓肩蝓弱え繧｣繝ｳ繧ｿ繝ｼ繝輔ぉ繧｢2023',
    description: '莠ｺ豌励ち繝ｯ繝ｼ繝・ぅ繝輔ぉ繝ｳ繧ｹ繧ｲ繝ｼ繝縲後い繝ｼ繧ｯ繝翫う繝・阪→縺ｮ繧ｳ繝ｩ繝・,
    startDate: new Date('2023-12-01'),
    endDate: new Date('2023-12-31'),
    status: 'completed',
    tags: ['#繧｢繝ｼ繧ｯ繝翫う繝・, '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#闌ｨ蝓・, '#蟷ｴ譛ｫ'],
    totalPosts: 26,
    totalViews: 723,
    totalReactions: 149,
    stores: ['縺､縺上・蠎・],
    bestPractices: [],
    successPatterns: ['謌ｦ逡･繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ蟇ｾ蠢・, '繧ｪ繝壹Ξ繝ｼ繧ｿ繝ｼ莠ｺ豌励・豢ｻ逕ｨ'],
    keyPhrases: ['縲梧耳縺励が繝壹Ξ繝ｼ繧ｿ繝ｼ縺ｮ繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲碁剞螳壹ョ繧ｶ繧､繝ｳ縺ｧ縺吶・],
    aiSummary: '繧ｿ繝ｯ繝ｼ繝・ぅ繝輔ぉ繝ｳ繧ｹ繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ謠先｡医′謌仙粥縺励※縺・∪縺吶・
  },
  {
    id: '34',
    name: '繧ｨ繝ｴ繧｡繝ｳ繧ｲ繝ｪ繧ｪ繝ｳﾃ怜ｱｱ譴ｨ繧ｳ繝ｩ繝・023',
    description: '莠ｺ豌励い繝九Γ縲梧眠荳也ｴ繧ｨ繝ｴ繧｡繝ｳ繧ｲ繝ｪ繧ｪ繝ｳ縲阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2023-07-15'),
    endDate: new Date('2023-08-31'),
    status: 'completed',
    tags: ['#繧ｨ繝ｴ繧｡繝ｳ繧ｲ繝ｪ繧ｪ繝ｳ', '#繧｢繝九Γ繧ｳ繝ｩ繝・, '#螻ｱ譴ｨ', '#螟・],
    totalPosts: 20,
    totalViews: 567,
    totalReactions: 115,
    stores: ['逕ｲ蠎懷ｺ・],
    bestPractices: [],
    successPatterns: ['蟷・ｺ・＞荳紋ｻ｣縺ｮ繝輔ぃ繝ｳ縺ｸ縺ｮ蟇ｾ蠢・, '繝ｬ繝医Ο繧｢繝九Γ繝輔ぃ繝ｳ縺ｸ縺ｮ蜈ｱ諢・],
    keyPhrases: ['縲後お繝ｴ繧｡繧ｰ繝・ぜ蜈･闕ｷ縺励∪縺励◆縲・, '縲悟・蜿ｷ讖溘き繝ｩ繝ｼ縺ｮ髯仙ｮ壹ョ繧ｶ繧､繝ｳ縺ｧ縺吶・],
    aiSummary: '荳紋ｻ｣繧定ｶ・∴縺ｦ諢帙＆繧後ｋ繧｢繝九Γ縺ｮ豢ｻ逕ｨ縺悟柑譫懃噪縺ｧ縺励◆縲・
  },
  {
    id: '35',
    name: '繝ｩ繝悶Λ繧､繝・繧ｹ繝ｼ繝代・繧ｹ繧ｿ繝ｼ!!ﾃ玲・蟐・023',
    description: '莠ｺ豌励い繧､繝峨Ν繧｢繝九Γ縲後Λ繝悶Λ繧､繝・繧ｹ繝ｼ繝代・繧ｹ繧ｿ繝ｼ!!縲阪→縺ｮ繧ｳ繝ｩ繝・,
    startDate: new Date('2023-11-01'),
    endDate: new Date('2023-12-31'),
    status: 'completed',
    tags: ['#繝ｩ繝悶Λ繧､繝・, '#繧｢繝九Γ繧ｳ繝ｩ繝・, '#諢帛ｪ・, '#蜀ｬ'],
    totalPosts: 15,
    totalViews: 423,
    totalReactions: 85,
    stores: ['譚ｾ螻ｱ蠎・],
    bestPractices: [],
    successPatterns: ['繧｢繧､繝峨Ν繧｢繝九Γ繝輔ぃ繝ｳ縺ｸ縺ｮ逅・ｧ｣', '謗ｨ縺励Γ繝ｳ縺ｸ縺ｮ蜈ｱ諢・],
    keyPhrases: ['縲梧耳縺励Γ繝ｳ縺ｮ繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲碁剞螳夂ｼｶ繝舌ャ繧ｸ蜈･闕ｷ縺励∪縺励◆縲・],
    aiSummary: '繧｢繧､繝峨Ν繧｢繝九Γ繝輔ぃ繝ｳ縺ｸ縺ｮ謠先｡医′謌仙粥縲・
  },
  {
    id: '36',
    name: '繝舌Φ繝峨Μ!ﾃ鈴ｦ吝ｷ昴さ繝ｩ繝懊ヵ繧ｧ繧｢2022',
    description: '莠ｺ豌鈴浹讌ｽ繧ｲ繝ｼ繝縲沓anG Dream!縲阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2022-10-01'),
    endDate: new Date('2022-10-31'),
    status: 'completed',
    tags: ['#繝舌Φ繝峨Μ', '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#鬥吝ｷ・, '#遘・],
    totalPosts: 18,
    totalViews: 498,
    totalReactions: 97,
    stores: ['鬮俶收蠎・],
    bestPractices: [],
    successPatterns: ['髻ｳ讌ｽ繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ逅・ｧ｣', '繝舌Φ繝牙挨繧ｰ繝・ぜ縺ｮ謠先｡・],
    keyPhrases: ['縲梧耳縺励ヰ繝ｳ繝峨・繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲後Λ繧､繝紋ｼ壼ｴ髯仙ｮ壹ョ繧ｶ繧､繝ｳ縺ｧ縺吶・],
    aiSummary: '髻ｳ讌ｽ繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ謠先｡医′螂ｽ隧輔〒縺励◆縲・
  },
  {
    id: '37',
    name: '縺・◆縺ｮ笘・・繝ｪ繝ｳ繧ｹ縺輔∪縺｣笙ｪﾃ怜ｾｳ蟲ｶ2023',
    description: '莠ｺ豌怜･ｳ諤ｧ蜷代￠繧ｲ繝ｼ繝縲後≧縺溘・繝ｪ縲阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2023-08-12'),
    endDate: new Date('2023-08-15'),
    status: 'completed',
    tags: ['#縺・◆繝励Μ', '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#蠕ｳ蟲ｶ', '#螟・],
    totalPosts: 17,
    totalViews: 487,
    totalReactions: 94,
    stores: ['蠕ｳ蟲ｶ蠎・],
    bestPractices: [],
    successPatterns: ['螂ｳ諤ｧ蜷代￠繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ蟇ｾ蠢・, '繧｢繧､繝峨Ν蛻･繧ｰ繝・ぜ縺ｮ謠先｡・],
    keyPhrases: ['縲梧耳縺励い繧､繝峨Ν縺ｮ繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲碁剞螳壹ョ繧ｶ繧､繝ｳ縺ｧ縺吶・],
    aiSummary: '螂ｳ諤ｧ蜷代￠繧｢繧､繝峨Ν繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ謠先｡医′謌仙粥縲・
  },
  {
    id: '38',
    name: 'FGOﾃ鈴ｫ倡衍繧ｵ繝槭・繝輔ぉ繧｢2023',
    description: '莠ｺ豌励ご繝ｼ繝縲熊ate/Grand Order縲阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2023-08-09'),
    endDate: new Date('2023-08-12'),
    status: 'completed',
    tags: ['#FGO', '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#鬮倡衍', '#螟・],
    totalPosts: 16,
    totalViews: 454,
    totalReactions: 89,
    stores: ['鬮倡衍蠎・],
    bestPractices: [],
    successPatterns: ['繝槭せ繧ｿ繝ｼ縺ｸ縺ｮ荳∝ｯｧ縺ｪ蟇ｾ蠢・, '繧ｵ繝ｼ繝ｴ繧｡繝ｳ繝井ｺｺ豌励・豢ｻ逕ｨ'],
    keyPhrases: ['縲梧耳縺励し繝ｼ繝ｴ繧｡繝ｳ繝医・繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲後・繧ｹ繧ｿ繝ｼ縺ｫ莠ｺ豌励〒縺吶・],
    aiSummary: 'RPG繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ謠先｡医′蜉ｹ譫懃噪縺ｧ縺励◆縲・
  },
  {
    id: '39',
    name: '繝偵・繝弱す繧ｹ繝槭う繧ｯﾃ嶺ｽ占ｳ繧ｳ繝ｩ繝・023',
    description: '莠ｺ豌鈴浹讌ｽ繝励Ο繧ｸ繧ｧ繧ｯ繝医後ヲ繝励ヮ繧ｷ繧ｹ繝槭う繧ｯ縲阪→縺ｮ繧ｳ繝ｩ繝・,
    startDate: new Date('2023-11-01'),
    endDate: new Date('2023-11-05'),
    status: 'completed',
    tags: ['#繝偵・繝槭う', '#髻ｳ讌ｽ繧ｳ繝ｳ繝・Φ繝・, '#菴占ｳ', '#遘・],
    totalPosts: 14,
    totalViews: 398,
    totalReactions: 78,
    stores: ['菴占ｳ蠎・],
    bestPractices: [],
    successPatterns: ['螂ｳ諤ｧ蜷代￠繧ｳ繝ｳ繝・Φ繝・ヵ繧｡繝ｳ縺ｸ縺ｮ逅・ｧ｣', '繝・ぅ繝薙ず繝ｧ繝ｳ蛻･縺ｮ謠先｡・],
    keyPhrases: ['縲梧耳縺励ョ繧｣繝薙ず繝ｧ繝ｳ縺ｮ繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲碁剞螳壹ョ繧ｶ繧､繝ｳ縺ｧ縺吶・],
    aiSummary: '髻ｳ讌ｽ繝励Ο繧ｸ繧ｧ繧ｯ繝医ヵ繧｡繝ｳ縺ｸ縺ｮ謠先｡医′謌仙粥縺励∪縺励◆縲・
  },
  {
    id: '40',
    name: '蛻蜑｣荵ｱ闊榲鈴聞蟠弱え繧｣繝ｳ繧ｿ繝ｼ繝輔ぉ繧｢2023',
    description: '莠ｺ豌励ご繝ｼ繝縲悟・蜑｣荵ｱ闊槭阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2023-01-22'),
    endDate: new Date('2023-02-05'),
    status: 'completed',
    tags: ['#蛻蜑｣荵ｱ闊・, '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#髟ｷ蟠・, '#蜀ｬ'],
    totalPosts: 23,
    totalViews: 645,
    totalReactions: 132,
    stores: ['髟ｷ蟠主ｺ・],
    bestPractices: [],
    successPatterns: ['螂ｳ諤ｧ蜷代￠繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ蟇ｾ蠢・, '謗ｨ縺怜・蜑｣縺ｸ縺ｮ逅・ｧ｣'],
    keyPhrases: ['縲梧耳縺怜・縺ｮ繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲悟ｯｩ逾櫁・↓莠ｺ豌励〒縺吶・],
    aiSummary: '豁ｴ蜿ｲ邉ｻ繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ謠先｡医′謌仙粥縲・
  },
  {
    id: '41',
    name: '繧ｰ繝ｩ繝ｳ繝悶Ν繝ｼ繝輔ぃ繝ｳ繧ｿ繧ｸ繝ｼﾃ怜､ｧ蛻・023',
    description: '莠ｺ豌由PG繧ｲ繝ｼ繝縲後げ繝ｩ繝ｳ繝悶Ν繝ｼ繝輔ぃ繝ｳ繧ｿ繧ｸ繝ｼ縲阪→縺ｮ繧ｳ繝ｩ繝・,
    startDate: new Date('2023-10-01'),
    endDate: new Date('2023-12-31'),
    status: 'completed',
    tags: ['#繧ｰ繝ｩ繝悶Ν', '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#螟ｧ蛻・, '#遘句・'],
    totalPosts: 19,
    totalViews: 534,
    totalReactions: 107,
    stores: ['螟ｧ蛻・ｺ・],
    bestPractices: [],
    successPatterns: ['RPG繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ逅・ｧ｣', '繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ莠ｺ豌励・豢ｻ逕ｨ'],
    keyPhrases: ['縲梧耳縺励く繝｣繝ｩ縺ｮ繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲碁ｨ守ｩｺ螢ｫ縺ｫ莠ｺ豌励〒縺吶・],
    aiSummary: '繧ｽ繝ｼ繧ｷ繝｣繝ｫ繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ謠先｡医′蜉ｹ譫懃噪縺ｧ縺励◆縲・
  },
  {
    id: '42',
    name: '縺ｨ縺ゅｋ繧ｷ繝ｪ繝ｼ繧ｺﾃ怜ｮｮ蟠弱し繝槭・繝輔ぉ繧｢2023',
    description: '莠ｺ豌励Λ繧､繝医ヮ繝吶Ν縲後→縺ゅｋ縲阪す繝ｪ繝ｼ繧ｺ縺ｨ縺ｮ繧ｳ繝ｩ繝・,
    startDate: new Date('2023-06-01'),
    endDate: new Date('2023-08-31'),
    status: 'completed',
    tags: ['#縺ｨ縺ゅｋ繧ｷ繝ｪ繝ｼ繧ｺ', '#繝ｩ繧､繝医ヮ繝吶Ν', '#螳ｮ蟠・, '#螟・],
    totalPosts: 17,
    totalViews: 478,
    totalReactions: 95,
    stores: ['螳ｮ蟠主ｺ・],
    bestPractices: [],
    successPatterns: ['繝ｩ繝弱・繝輔ぃ繝ｳ縺ｸ縺ｮ逅・ｧ｣', '繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ莠ｺ豌励・豢ｻ逕ｨ'],
    keyPhrases: ['縲悟ｾ｡蝮らｾ守清繧ｰ繝・ぜ蜈･闕ｷ縺励∪縺励◆縲・, '縲碁剞螳壹ョ繧ｶ繧､繝ｳ縺ｧ縺吶・],
    aiSummary: '繝ｩ繧､繝医ヮ繝吶Ν繝輔ぃ繝ｳ縺ｸ縺ｮ謠先｡医′謌仙粥縺励∪縺励◆縲・
  },
  {
    id: '43',
    name: '繧｢繧､繧ｫ繝・ﾃ鈴ｹｿ蜈仙ｳｶ繧ｳ繝ｩ繝懊ヵ繧ｧ繧｢2022',
    description: '莠ｺ豌励い繧､繝峨Ν繧ｲ繝ｼ繝縲後い繧､繧ｫ繝・縲阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2022-11-01'),
    endDate: new Date('2022-11-30'),
    status: 'completed',
    tags: ['#繧｢繧､繧ｫ繝・, '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#鮖ｿ蜈仙ｳｶ', '#遘・],
    totalPosts: 15,
    totalViews: 421,
    totalReactions: 83,
    stores: ['鮖ｿ蜈仙ｳｶ蠎・],
    bestPractices: [],
    successPatterns: ['蟄蝉ｾ帛髄縺代さ繝ｳ繝・Φ繝・・螳ｶ譌乗署譯・, '繝輔ぃ繝溘Μ繝ｼ螻､縺ｸ縺ｮ蟇ｾ蠢・],
    keyPhrases: ['縲後♀蟄先ｧ倥↓螟ｧ莠ｺ豌励〒縺吶・, '縲後い繧､繝峨Ν豢ｻ蜍輔げ繝・ぜ縺ゅｊ縺ｾ縺吶・],
    aiSummary: '繧ｭ繝・ぜ蜷代￠繧ｲ繝ｼ繝縺ｮ螳ｶ譌乗署譯医′謌仙粥縲・
  },
  {
    id: '44',
    name: '繝ｴ繧｡繧､繧ｪ繝ｬ繝・ヨ繝ｻ繧ｨ繝ｴ繧｡繝ｼ繧ｬ繝ｼ繝・Φﾃ鈴搨譽ｮ2023',
    description: '諢溷虚繧｢繝九Γ縲後Χ繧｡繧､繧ｪ繝ｬ繝・ヨ繝ｻ繧ｨ繝ｴ繧｡繝ｼ繧ｬ繝ｼ繝・Φ縲阪→縺ｮ繧ｳ繝ｩ繝・,
    startDate: new Date('2023-08-02'),
    endDate: new Date('2023-08-07'),
    status: 'completed',
    tags: ['#繝ｴ繧｡繧､繧ｪ繝ｬ繝・ヨ', '#繧｢繝九Γ繧ｳ繝ｩ繝・, '#髱呈｣ｮ', '#螟・],
    totalPosts: 21,
    totalViews: 589,
    totalReactions: 118,
    stores: ['髱呈｣ｮ蠎・],
    bestPractices: [],
    successPatterns: ['諢溷虚邉ｻ繧｢繝九Γ繝輔ぃ繝ｳ縺ｸ縺ｮ荳∝ｯｧ縺ｪ蟇ｾ蠢・, '菴懷刀縺ｮ荳也阜隕ｳ縺ｸ縺ｮ逅・ｧ｣'],
    keyPhrases: ['縲後Χ繧｡繧､繧ｪ繝ｬ繝・ヨ繧ｰ繝・ぜ蜈･闕ｷ縺励∪縺励◆縲・, '縲檎ｾ弱＠縺・ョ繧ｶ繧､繝ｳ縺ｧ縺吶・],
    aiSummary: '諢溷虚邉ｻ繧｢繝九Γ繝輔ぃ繝ｳ縺ｸ縺ｮ謠先｡医′螂ｽ隧輔〒縺励◆縲・
  },
  {
    id: '45',
    name: '繝舌・繝√Ε繝ｫ縺輔ｓ縺ｯ縺ｿ縺ｦ縺・ｋﾃ怜ｲｩ謇・023',
    description: 'VTuber逡ｪ邨・後ヰ繝ｼ繝√Ε繝ｫ縺輔ｓ縺ｯ縺ｿ縺ｦ縺・ｋ縲阪→縺ｮ繧ｳ繝ｩ繝・,
    startDate: new Date('2023-09-01'),
    endDate: new Date('2023-10-31'),
    status: 'completed',
    tags: ['#VTuber', '#繝舌・繝√Ε繝ｫ', '#蟯ｩ謇・, '#遘・],
    totalPosts: 13,
    totalViews: 367,
    totalReactions: 72,
    stores: ['逶帛ｲ｡蠎・],
    bestPractices: [],
    successPatterns: ['VTuber繝輔ぃ繝ｳ縺ｸ縺ｮ逅・ｧ｣', '繝舌・繝√Ε繝ｫ譁・喧縺ｸ縺ｮ蜈ｱ諢・],
    keyPhrases: ['縲梧耳縺遊Tuber縺ｮ繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲碁剞螳壹ョ繧ｶ繧､繝ｳ縺ｧ縺吶・],
    aiSummary: 'VTuber繧ｳ繝ｳ繝・Φ繝・ヵ繧｡繝ｳ縺ｸ縺ｮ謠先｡医′謌仙粥縲・
  },
  {
    id: '46',
    name: 'Re:繧ｼ繝ｭ縺九ｉ蟋九ａ繧狗焚荳也阜逕滓ｴｻﾃ礼ｧ狗伐2023',
    description: '莠ｺ豌励い繝九Γ縲軍e:繧ｼ繝ｭ縲阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2023-08-03'),
    endDate: new Date('2023-08-06'),
    status: 'completed',
    tags: ['#繝ｪ繧ｼ繝ｭ', '#繧｢繝九Γ繧ｳ繝ｩ繝・, '#遘狗伐', '#螟・],
    totalPosts: 16,
    totalViews: 445,
    totalReactions: 88,
    stores: ['遘狗伐蠎・],
    bestPractices: [],
    successPatterns: ['逡ｰ荳也阜邉ｻ繧｢繝九Γ繝輔ぃ繝ｳ縺ｸ縺ｮ逅・ｧ｣', '繧ｭ繝｣繝ｩ繧ｯ繧ｿ繝ｼ莠ｺ豌励・豢ｻ逕ｨ'],
    keyPhrases: ['縲後Ξ繝縺ｮ繧ｰ繝・ぜ蜈･闕ｷ縺励∪縺励◆縲・, '縲後お繝溘Μ繧｢繧ｰ繝・ぜ繧ゆｺｺ豌励〒縺吶・],
    aiSummary: '逡ｰ荳也阜繧｢繝九Γ繝輔ぃ繝ｳ縺ｸ縺ｮ謠先｡医′蜉ｹ譫懃噪縺ｧ縺励◆縲・
  },
  {
    id: '47',
    name: '繧｢繧ｺ繝ｼ繝ｫ繝ｬ繝ｼ繝ｳﾃ怜ｱｱ蠖｢繧ｳ繝ｩ繝・023',
    description: '莠ｺ豌励ご繝ｼ繝縲後い繧ｺ繝ｼ繝ｫ繝ｬ繝ｼ繝ｳ縲阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2023-06-01'),
    endDate: new Date('2023-07-31'),
    status: 'completed',
    tags: ['#繧｢繧ｺ繝ｬ繝ｳ', '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#螻ｱ蠖｢', '#螟・],
    totalPosts: 18,
    totalViews: 501,
    totalReactions: 101,
    stores: ['螻ｱ蠖｢蠎・],
    bestPractices: [],
    successPatterns: ['繝溘Μ繧ｿ繝ｪ繝ｼ繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ蟇ｾ蠢・, '濶ｦ闊ｹ謫ｬ莠ｺ蛹紋ｺｺ豌励・豢ｻ逕ｨ'],
    keyPhrases: ['縲梧耳縺揖AN-SEN縺ｮ繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・, '縲梧欠謠ｮ螳倥↓莠ｺ豌励〒縺吶・],
    aiSummary: '繝溘Μ繧ｿ繝ｪ繝ｼ邉ｻ繧ｲ繝ｼ繝繝輔ぃ繝ｳ縺ｸ縺ｮ謠先｡医′謌仙粥縺励∪縺励◆縲・
  },
  {
    id: '48',
    name: '繝励Μ繧ｭ繝･繧｢繧ｷ繝ｪ繝ｼ繧ｺﾃ礼ｦ丞ｳｶ繝輔ぉ繧｢2023',
    description: '莠ｺ豌励い繝九Γ縲後・繝ｪ繧ｭ繝･繧｢縲阪す繝ｪ繝ｼ繧ｺ縺ｨ縺ｮ繧ｳ繝ｩ繝・,
    startDate: new Date('2023-07-01'),
    endDate: new Date('2023-08-31'),
    status: 'completed',
    tags: ['#繝励Μ繧ｭ繝･繧｢', '#繧｢繝九Γ繧ｳ繝ｩ繝・, '#遖丞ｳｶ', '#螟・],
    totalPosts: 17,
    totalViews: 473,
    totalReactions: 94,
    stores: ['遖丞ｳｶ蠎・, '驛｡螻ｱ蠎・],
    bestPractices: [],
    successPatterns: ['繝輔ぃ繝溘Μ繝ｼ螻､縺ｸ縺ｮ謠先｡・, '蟄蝉ｾ帛髄縺代さ繝ｳ繝・Φ繝・・螳ｶ譌丞ｯｾ蠢・],
    keyPhrases: ['縲後♀蟄先ｧ倥↓螟ｧ莠ｺ豌励・繝励Μ繧ｭ繝･繧｢繧ｰ繝・ぜ縺ｧ縺吶・, '縲瑚ｦｪ蟄舌〒讌ｽ縺励ａ縺ｾ縺吶・],
    aiSummary: '繧ｭ繝・ぜ蜷代￠繧｢繝九Γ縺ｮ螳ｶ譌乗署譯医′蜉ｹ譫懃噪縺ｧ縺励◆縲・
  },
  {
    id: '49',
    name: '繝峨Λ繧ｴ繝ｳ繧ｯ繧ｨ繧ｹ繝暗嶺ｸ蛾㍾繧ｳ繝ｩ繝・023',
    description: '蝗ｽ豌醍噪RPG縲後ラ繝ｩ繧ｴ繝ｳ繧ｯ繧ｨ繧ｹ繝医阪→縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2023-01-01'),
    endDate: new Date('2023-03-31'),
    status: 'completed',
    tags: ['#繝峨Λ繧ｯ繧ｨ', '#繧ｲ繝ｼ繝繧ｳ繝ｩ繝・, '#荳蛾㍾', '#譁ｰ譏･'],
    totalPosts: 24,
    totalViews: 678,
    totalReactions: 136,
    stores: ['蝗帶律蟶ょｺ・, '豢･蠎・],
    bestPractices: [],
    successPatterns: ['蟷・ｺ・＞荳紋ｻ｣縺ｸ縺ｮ蟇ｾ蠢・, '蝗ｽ豌醍噪繧ｲ繝ｼ繝縺ｮ豢ｻ逕ｨ'],
    keyPhrases: ['縲後せ繝ｩ繧､繝繧ｰ繝・ぜ蜈･闕ｷ縺励∪縺励◆縲・, '縲後ラ繝ｩ繧ｯ繧ｨ繝輔ぃ繝ｳ縺ｫ螟ｧ莠ｺ豌励〒縺吶・],
    aiSummary: '蝗ｽ豌醍噪RPG繧呈ｴｻ逕ｨ縺励◆謠先｡医′謌仙粥縺励∪縺励◆縲・
  },
  {
    id: '50',
    name: '縺代＞縺翫ｓ!ﾃ玲ｻ玖ｳ繧ｵ繝槭・繝輔ぉ繧ｹ繝・ぅ繝舌Ν2023',
    description: '莠ｺ豌励い繝九Γ縲後￠縺・♀繧・縲阪・閨門慍貊玖ｳ縺ｧ縺ｮ繧ｳ繝ｩ繝懊う繝吶Φ繝・,
    startDate: new Date('2023-07-15'),
    endDate: new Date('2023-08-31'),
    status: 'completed',
    tags: ['#縺代＞縺翫ｓ', '#繧｢繝九Γ繧ｳ繝ｩ繝・, '#貊玖ｳ', '#螟・],
    totalPosts: 16,
    totalViews: 448,
    totalReactions: 89,
    stores: ['螟ｧ豢･蠎・, '闕画ｴ･蠎・],
    bestPractices: [],
    successPatterns: ['閨門慍蟾｡遉ｼ螳｢縺ｸ縺ｮ蟇ｾ蠢・, '繧｢繝九Γ繝輔ぃ繝ｳ縺ｸ縺ｮ逅・ｧ｣'],
    keyPhrases: ['縲瑚＊蝨ｰ蟾｡遉ｼ縺ｮ諤昴＞蜃ｺ縺ｫ繧ｰ繝・ぜ繧偵←縺・◇縲・, '縲梧叛隱ｲ蠕後ユ繧｣繝ｼ繧ｿ繧､繝繧ｰ繝・ぜ縺ゅｊ縺ｾ縺吶・],
    aiSummary: '閨門慍蟾｡遉ｼ髴隕√ｒ豢ｻ逕ｨ縺励◆謠先｡医′蜉ｹ譫懃噪縺ｧ縺励◆縲・
  }
];

type ViewMode = 'list' | 'detail';
type ViewModeWithCreate = 'list' | 'detail' | 'create';
type FilterStatus = 'all' | 'active' | 'completed' | 'upcoming' | 'my-events';

export default function Events() {
  const { user, updateUser } = useAuth();
  const [viewMode, setViewMode] = useState<ViewModeWithCreate>('list');
  const [selectedEvent, setSelectedEvent] = useState<Event | null>(null);
  const [searchQuery, setSearchQuery] = useState('');
  const [filterStatus, setFilterStatus] = useState<FilterStatus>('all');
  const [showEventSelectionModal, setShowEventSelectionModal] = useState(false);
  const [selectedParticipatingEvents, setSelectedParticipatingEvents] = useState<string[]>([]);
  const [selectedArea, setSelectedArea] = useState<string>('all');
  const [isLoading, setIsLoading] = useState(false);
  const [activeDetailTab, setActiveDetailTab] = useState<'overview' | 'knowledge' | 'patterns' | 'phrases'>('knowledge');
  const [showAllEventsModal, setShowAllEventsModal] = useState(false);
  const [allEventsFilterArea, setAllEventsFilterArea] = useState<string>('all');
  const [allEventsFilterYear, setAllEventsFilterYear] = useState<string>('all');

  // 繝ｦ繝ｼ繧ｶ繝ｼ縺ｮ蜿ょ刈繧､繝吶Φ繝医ｒ蛻晄悄蛹・  useEffect(() => {
    const loadParticipatingEvents = async () => {
      if (user?.id) {
        const events = await getUserParticipatingEvents(user.id);
        setSelectedParticipatingEvents(events);
      }
    };
    loadParticipatingEvents();
  }, [user?.id]);

  const filteredEvents = mockEvents.filter(event => {
    const matchesSearch = event.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         event.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()));
    const matchesFilter = filterStatus === 'all' ||
                         event.status === filterStatus ||
                         (filterStatus === 'my-events' && selectedParticipatingEvents.includes(event.id));
    return matchesSearch && matchesFilter;
  });

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'active': return 'bg-green-100 text-success-green';
      case 'completed': return 'bg-gray-100 text-gray-600';
      case 'upcoming': return 'bg-blue-100 text-sky-blue';
      default: return 'bg-gray-100 text-gray-600';
    }
  };

  const getStatusLabel = (status: string) => {
    switch (status) {
      case 'active': return '髢句ぎ荳ｭ';
      case 'completed': return '邨ゆｺ・;
      case 'upcoming': return '髢句ぎ莠亥ｮ・;
      default: return '荳肴・';
    }
  };

  const handleEventClick = (event: Event) => {
    setSelectedEvent(event);
    setViewMode('detail');
  };

  const handleBackToList = () => {
    setSelectedEvent(null);
    setViewMode('list');
  };

  const handleCreatePost = async (postData: any) => {\n    try {\n      if (!user?.id) {\n        alert('ログインが必要です');\n        return;\n      }\n      const ok = await createFavoriteEventPost({\n        authorId: user.id,\n        eventId: postData.eventId,\n        title: postData.title,\n        situation: postData.situation,\n        innovation: postData.innovation,\n        result: postData.result,\n        learning: postData.learning,\n        tags: postData.tags || [],\n      });\n      if (ok) {\n        alert('イベント事例を保存しました');\n        setViewMode('list');\n      } else {\n        alert('保存に失敗しました。時間をおいて再度お試しください。');\n      }\n    } catch (e) {\n      console.error('Create favorite event post failed:', e);\n      alert('保存中にエラーが発生しました');\n    }\n  };

  const handleToggleEventParticipation = (eventId: string) => {
    setSelectedParticipatingEvents(prev =>
      prev.includes(eventId)
        ? prev.filter(id => id !== eventId)
        : [...prev, eventId]
    );
  };

  const handleSaveParticipatingEvents = async () => {
    if (!user?.id) {
      console.error('繝ｦ繝ｼ繧ｶ繝ｼID縺後≠繧翫∪縺帙ｓ');
      return;
    }

    setIsLoading(true);
    try {
      console.log('沈 菫晏ｭ伜・逅・幕蟋・- 繝ｦ繝ｼ繧ｶ繝ｼID:', user.id, '繧､繝吶Φ繝・D:', selectedParticipatingEvents);

      // 繝・・繧ｿ繝吶・繧ｹ縺ｫ菫晏ｭ・      const success = await saveUserParticipatingEvents(user.id, selectedParticipatingEvents);

      if (success) {
        console.log('笨・菫晏ｭ俶・蜉・- 繝・・繧ｿ繝吶・繧ｹ縺九ｉ蜀崎ｪｭ縺ｿ霎ｼ縺ｿ荳ｭ...');

        // 繝・・繧ｿ繝吶・繧ｹ縺九ｉ譛譁ｰ縺ｮ蜿ょ刈繧､繝吶Φ繝医ｒ蜀崎ｪｭ縺ｿ霎ｼ縺ｿ
        const updatedEvents = await getUserParticipatingEvents(user.id);
        console.log('踏 蜀崎ｪｭ縺ｿ霎ｼ縺ｿ螳御ｺ・', updatedEvents);
        setSelectedParticipatingEvents(updatedEvents);

        setShowEventSelectionModal(false);
        alert('蜿ょ刈繧､繝吶Φ繝医ｒ菫晏ｭ倥＠縺ｾ縺励◆');
      } else {
        console.error('笶・蜿ょ刈繧､繝吶Φ繝医・菫晏ｭ倥↓螟ｱ謨励＠縺ｾ縺励◆');
        alert('菫晏ｭ倥↓螟ｱ謨励＠縺ｾ縺励◆縲ゅｂ縺・ｸ蠎ｦ縺願ｩｦ縺励￥縺縺輔＞縲・);
      }
    } catch (error) {
      console.error('笶・蜿ょ刈繧､繝吶Φ繝井ｿ晏ｭ倥お繝ｩ繝ｼ:', error);
      alert('菫晏ｭ倅ｸｭ縺ｫ繧ｨ繝ｩ繝ｼ縺檎匱逕溘＠縺ｾ縺励◆');
    } finally {
      setIsLoading(false);
    }
  };

  // 2024蟷ｴ縺ｫ髢句ぎ縺輔ｌ縺溘う繝吶Φ繝医ｒ縲碁幕蛯ｬ荳ｭ繧､繝吶Φ繝医阪→縺励※螳夂ｾｩ
  const activeEvents = mockEvents.filter(e => {
    const year2024Match = e.startDate.getFullYear() === 2024 || e.endDate.getFullYear() === 2024;
    if (selectedArea === 'all') return year2024Match;

    // 蝨ｰ譁ｹ蛻･繧ｨ繝ｪ繧｢繝輔ぅ繝ｫ繧ｿ繝ｪ繝ｳ繧ｰ
    const regionalKeywords: { [key: string]: string[] } = {
      '蛹玲ｵｷ驕・: ['蛹玲ｵｷ驕・, '譛ｭ蟷・],
      '譚ｱ蛹・: ['髱呈｣ｮ', '蟯ｩ謇・, '螳ｮ蝓・, '遘狗伐', '螻ｱ蠖｢', '遖丞ｳｶ', '莉吝床'],
      '髢｢譚ｱ': ['譚ｱ莠ｬ', '逾槫･亥ｷ・, '蝓ｼ邇・, '蜊・痩', '闌ｨ蝓・, '譬・惠', '鄒､鬥ｬ', '貂玖ｰｷ', '譁ｰ螳ｿ', '豎陲・, '譛画･ｽ逕ｺ', '遘玖痩蜴・, '讓ｪ豬・, '螟ｧ螳ｮ'],
      '荳ｭ驛ｨ': ['譁ｰ貎・, '蟇悟ｱｱ', '遏ｳ蟾・, '遖丈ｺ・, '螻ｱ譴ｨ', '髟ｷ驥・, '蟯宣・', '髱吝ｲ｡', '諢帷衍', '蜷榊商螻・],
      '霑醍柄': ['荳蛾㍾', '貊玖ｳ', '莠ｬ驛ｽ', '螟ｧ髦ｪ', '蜈ｵ蠎ｫ', '螂郁憶', '蜥梧ｭ悟ｱｱ', '譴・伐', '逾樊虻'],
      '荳ｭ蝗ｽ': ['魑･蜿・, '蟲ｶ譬ｹ', '蟯｡螻ｱ', '蠎・ｳｶ', '螻ｱ蜿｣'],
      '蝗帛嵜': ['蠕ｳ蟲ｶ', '鬥吝ｷ・, '諢帛ｪ・, '鬮倡衍'],
      '荵晏ｷ・: ['遖丞ｲ｡', '菴占ｳ', '髟ｷ蟠・, '辭頑悽', '螟ｧ蛻・, '螳ｮ蟠・, '鮖ｿ蜈仙ｳｶ', '豐也ｸ・, '蜊壼､・, '螟ｩ逾・]
    };

    const keywords = regionalKeywords[selectedArea] || [];
    const matchesArea = e.stores.some(store =>
      keywords.some(keyword => store.includes(keyword))
    ) || e.stores.includes('蜈ｨ蠎苓・');

    return year2024Match && matchesArea;
  });

  if (viewMode === 'create') {
    return (
      <EventPostForm 
        onSubmit={handleCreatePost}
        onCancel={handleBackToList}
        events={mockEvents.map(e => ({ id: e.id, name: e.name, status: e.status }))}
      />
    );
  }

  if (viewMode === 'detail' && selectedEvent) {
    return (
      <div className="space-y-6">
        {/* 繝倥ャ繝繝ｼ */}
        <div className="flex items-center space-x-4">
          <button
            onClick={handleBackToList}
            className="p-2 text-gray-400 hover:text-gray-600 transition-colors"
          >
            <ChevronRight className="w-5 h-5 rotate-180" />
          </button>
          <div className="flex-1">
            <div className="flex items-center space-x-3 mb-2">
              <h1 className="text-2xl font-bold text-gray-900">{selectedEvent.name}</h1>
              <span className={`px-3 py-1 text-sm font-medium rounded-full ${getStatusColor(selectedEvent.status)}`}>
                {getStatusLabel(selectedEvent.status)}
              </span>
            </div>
            <p className="text-gray-600">{selectedEvent.description}</p>
          </div>
        </div>

        {/* 繧ｿ繝悶リ繝薙ご繝ｼ繧ｷ繝ｧ繝ｳ */}
        <div className="bg-white rounded-xl border border-gray-200 p-1">
          <div className="grid grid-cols-4 gap-2">
            <button
              onClick={() => setActiveDetailTab('knowledge')}
              className={`px-4 py-3 rounded-lg font-medium transition-colors text-sm ${
                activeDetailTab === 'knowledge'
                  ? 'bg-vivid-red text-white'
                  : 'text-gray-600 hover:bg-gray-100'
              }`}
            >
              牒 繝輔ぃ繝ｳ縺ｮ讌ｽ縺励∩繧堤炊隗｣縺吶ｋ縺溘ａ縺ｮ蝓ｺ遉取ュ蝣ｱ
            </button>
            <button
              onClick={() => setActiveDetailTab('overview')}
              className={`px-4 py-3 rounded-lg font-medium transition-colors text-sm ${
                activeDetailTab === 'overview'
                  ? 'bg-vivid-red text-white'
                  : 'text-gray-600 hover:bg-gray-100'
              }`}
            >
              投 讎りｦ・            </button>
            <button
              onClick={() => setActiveDetailTab('patterns')}
              className={`px-4 py-3 rounded-lg font-medium transition-colors text-sm ${
                activeDetailTab === 'patterns'
                  ? 'bg-vivid-red text-white'
                  : 'text-gray-600 hover:bg-gray-100'
              }`}
            >
              笨ｨ 謌仙粥繝代ち繝ｼ繝ｳ
            </button>
            <button
              onClick={() => setActiveDetailTab('phrases')}
              className={`px-4 py-3 rounded-lg font-medium transition-colors text-sm ${
                activeDetailTab === 'phrases'
                  ? 'bg-vivid-red text-white'
                  : 'text-gray-600 hover:bg-gray-100'
              }`}
            >
              町 繝輔Ξ繝ｼ繧ｺ髮・            </button>
          </div>
        </div>

        {/* 蠢・育衍隴倥ち繝・*/}
        {activeDetailTab === 'knowledge' && selectedEvent.essentialKnowledge && (
          <div className="space-y-4">
            {/* 菴懷刀讎りｦ・*/}
            <div className="bg-white rounded-xl border border-gray-200 p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-3 flex items-center space-x-2">
                <span className="text-2xl">当</span>
                <span>菴懷刀讎りｦ・/span>
              </h3>
              <p className="text-gray-700 leading-relaxed mb-4">{selectedEvent.essentialKnowledge.overview}</p>

              {/* 蜈ｬ蠑上し繧､繝医Μ繝ｳ繧ｯ */}
              {selectedEvent.essentialKnowledge.officialSiteUrl && (
                <a
                  href={selectedEvent.essentialKnowledge.officialSiteUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="inline-flex items-center space-x-2 px-4 py-2 bg-gradient-to-r from-purple-600 to-blue-600 text-white rounded-lg hover:from-purple-700 hover:to-blue-700 transition-all shadow-md hover:shadow-lg transform hover:scale-105"
                >
                  <ExternalLink className="w-4 h-4" />
                  <span className="font-medium">蜈ｬ蠑上し繧､繝医ｒ隕九ｋ</span>
                </a>
              )}
            </div>

            {/* 荳ｻ隕√く繝｣繝ｩ繧ｯ繧ｿ繝ｼ */}
            <div className="bg-white rounded-xl border border-gray-200 p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center space-x-2">
                <span className="text-2xl">則</span>
                <span>荳ｻ隕√く繝｣繝ｩ繧ｯ繧ｿ繝ｼTOP3</span>
              </h3>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                {selectedEvent.essentialKnowledge.mainCharacters.map((character, index) => (
                  <div key={index} className="p-4 bg-purple-50 rounded-lg border border-purple-200">
                    <div className="flex items-center space-x-2 mb-2">
                      <div className="w-8 h-8 bg-purple-600 text-white rounded-full flex items-center justify-center font-bold">
                        {index + 1}
                      </div>
                      <p className="text-gray-800 font-medium">{character}</p>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* 繝輔ぃ繝ｳ螻､縺ｮ迚ｹ蠕ｴ */}
            <div className="bg-white rounded-xl border border-gray-200 p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center space-x-2">
                <span className="text-2xl">識</span>
                <span>繝輔ぃ繝ｳ螻､縺ｮ迚ｹ蠕ｴ</span>
              </h3>
              <ul className="space-y-3">
                {selectedEvent.essentialKnowledge.fanBase.map((item, index) => (
                  <li key={index} className="flex items-start space-x-3">
                    <span className="text-sky-blue mt-1">笳・/span>
                    <span className="text-gray-700 flex-1">{item}</span>
                  </li>
                ))}
              </ul>
            </div>

            {/* 莨夊ｩｱ縺ｮ繝偵Φ繝・*/}
            <div className="bg-gradient-to-r from-pink-50 to-purple-50 rounded-xl border border-pink-200 p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center space-x-2">
                <span className="text-2xl">町</span>
                <span>繝輔ぃ繝ｳ縺ｨ讌ｽ縺励￥隧ｱ縺吶◆繧√・繝偵Φ繝・/span>
              </h3>
              <ul className="space-y-3">
                {selectedEvent.essentialKnowledge.precautions.map((item, index) => (
                  <li key={index} className="flex items-start space-x-3">
                    <span className="text-pink-500 mt-1">庁</span>
                    <span className="text-gray-800 flex-1">{item}</span>
                  </li>
                ))}
              </ul>
            </div>

            {/* 莨夊ｩｱ縺ｮ縺阪▲縺九￠繝昴う繝ｳ繝・*/}
            <div className="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl border border-blue-200 p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center space-x-2">
                <span className="text-2xl">検</span>
                <span>莨夊ｩｱ縺ｮ縺阪▲縺九￠繝昴う繝ｳ繝・/span>
              </h3>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                {selectedEvent.essentialKnowledge.servicePoints.map((point, index) => (
                  <div key={index} className="flex items-start space-x-3 p-3 bg-white rounded-lg border border-blue-200 shadow-sm">
                    <span className="text-blue-500 text-xl">町</span>
                    <span className="text-gray-800 flex-1">{point}</span>
                  </div>
                ))}
              </div>
            </div>
          </div>
        )}

        {/* 讎りｦ√ち繝・*/}
        {activeDetailTab === 'overview' && (
          <div className="bg-white rounded-xl border border-gray-200 p-6">
            <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
              <div className="text-center p-4 bg-blue-50 rounded-lg">
                <MessageCircle className="w-8 h-8 text-sky-blue mx-auto mb-2" />
                <div className="text-xl font-bold text-gray-900">{selectedEvent.totalPosts}</div>
                <div className="text-sm text-gray-600">謚慕ｨｿ莠倶ｾ・/div>
              </div>
              <div className="text-center p-4 bg-green-50 rounded-lg">
                <Eye className="w-8 h-8 text-success-green mx-auto mb-2" />
                <div className="text-xl font-bold text-gray-900">{selectedEvent.totalViews}</div>
                <div className="text-sm text-gray-600">邱城夢隕ｧ謨ｰ</div>
              </div>
              <div className="text-center p-4 bg-yellow-50 rounded-lg">
                <ThumbsUp className="w-8 h-8 text-sunshine-yellow mx-auto mb-2" />
                <div className="text-xl font-bold text-gray-900">{selectedEvent.totalReactions}</div>
                <div className="text-sm text-gray-600">邱上Μ繧｢繧ｯ繧ｷ繝ｧ繝ｳ</div>
              </div>
              <div className="text-center p-4 bg-purple-50 rounded-lg">
                <Users className="w-8 h-8 text-purple-600 mx-auto mb-2" />
                <div className="text-xl font-bold text-gray-900">{selectedEvent.stores.length}</div>
                <div className="text-sm text-gray-600">蜿ょ刈蠎苓・</div>
              </div>
            </div>

            {/* AI隕∫ｴ・*/}
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
              <div className="flex items-start space-x-3">
                <Sparkles className="w-5 h-5 text-sky-blue mt-0.5" />
                <div>
                  <h3 className="font-semibold text-sky-blue mb-2">AI蛻・梵繧ｵ繝槭Μ繝ｼ</h3>
                  <p className="text-blue-700">{selectedEvent.aiSummary}</p>
                </div>
              </div>
            </div>

            {/* 蜿ょ刈蠎苓・ */}
            <div>
              <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center space-x-2">
                <Users className="w-5 h-5 text-purple-600" />
                <span>蜿ょ刈蠎苓・</span>
              </h3>
              <div className="flex flex-wrap gap-2">
                {selectedEvent.stores.map((store, index) => (
                  <span key={index} className="px-3 py-1 bg-purple-100 text-purple-700 text-sm rounded-full">
                    {store}
                  </span>
                ))}
              </div>
            </div>
          </div>
        )}

        {/* 謌仙粥繝代ち繝ｼ繝ｳ繧ｿ繝・*/}
        {activeDetailTab === 'patterns' && selectedEvent.successPatterns.length > 0 && (
          <div className="space-y-6">
            {/* 謌仙粥繝代ち繝ｼ繝ｳTOP3 */}
            <div className="bg-white rounded-xl border border-gray-200 p-6">
              <div className="flex items-center space-x-2 mb-4">
                <Award className="w-5 h-5 text-sunshine-yellow" />
                <h3 className="text-lg font-semibold text-gray-900">謌仙粥繝代ち繝ｼ繝ｳTOP3</h3>
              </div>
              <div className="space-y-3">
                {selectedEvent.successPatterns.map((pattern, index) => (
                  <div key={index} className="flex items-start space-x-3 p-4 bg-yellow-50 rounded-lg border border-yellow-200">
                    <div className="w-8 h-8 bg-sunshine-yellow text-white rounded-full flex items-center justify-center text-sm font-bold flex-shrink-0">
                      {index + 1}
                    </div>
                    <p className="text-gray-800 flex-1 text-base">{pattern}</p>
                  </div>
                ))}
              </div>
            </div>

            {/* 螳滄圀縺ｮ莠倶ｾ区兜遞ｿ */}
            <div>
              <div className="flex items-center space-x-2 mb-4">
                <MessageCircle className="w-5 h-5 text-sky-blue" />
                <h3 className="text-lg font-semibold text-gray-900">縺ｿ繧薙↑縺ｮ謚慕ｨｿ莠倶ｾ・/h3>
              </div>
              {/* 莉企ｱ縺ｮ莠ｺ豌嶺ｺ倶ｾ亀OP3・医う繝吶Φ繝亥・・・*/}
              <div className="bg-gradient-to-r from-yellow-50 to-red-50 rounded-xl p-6 border border-yellow-200 mb-6">
                <div className="flex items-center space-x-2 mb-4">
                  <Award className="w-5 h-5 text-sunshine-yellow" />
                  <h3 className="text-lg font-semibold text-gray-900">莉企ｱ縺ｮ莠ｺ豌嶺ｺ倶ｾ亀OP3</h3>
                </div>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                  {mockCommunityPosts
                    .filter(post => post.eventId === selectedEvent.id)
                    .sort((a, b) => {
                      const aScore = a.reactions.like + a.reactions.empathy + a.reactions.helpful;
                      const bScore = b.reactions.like + b.reactions.empathy + b.reactions.helpful;
                      return bScore - aScore;
                    })
                    .slice(0, 3)
                    .map((post, index) => (
                      <div key={post.id} className="bg-white rounded-lg p-4 border border-yellow-200">
                        <div className="flex items-center space-x-2 mb-2">
                          <div className={`w-6 h-6 rounded-full flex items-center justify-center text-white text-sm font-bold ${
                            index === 0 ? 'bg-sunshine-yellow' : index === 1 ? 'bg-gray-400' : 'bg-orange-500'
                          }`}>
                            {index + 1}
                          </div>
                          <span className="text-sm font-medium text-gray-900">{post.author.department}</span>
                        </div>
                        <h4 className="font-medium text-gray-900 text-sm mb-2 line-clamp-2">{post.title}</h4>
                        <div className="flex items-center space-x-3 text-xs text-gray-500">
                          <span>{post.reactions.like + post.reactions.empathy + post.reactions.helpful} 繝ｪ繧｢繧ｯ繧ｷ繝ｧ繝ｳ</span>
                          <span>{post.views} 髢ｲ隕ｧ</span>
                        </div>
                      </div>
                    ))}
                </div>
              </div>

              <div className="space-y-4">
                {mockCommunityPosts.filter(post => post.eventId === selectedEvent.id).map((post) => (
                  <div key={post.id} className="bg-white rounded-xl border border-gray-200 p-6 hover:shadow-md transition-shadow">
                    <div className="flex items-start space-x-4 mb-4">
                      <img
                        src={post.author.avatar}
                        alt={post.author.name}
                        className="w-12 h-12 rounded-full object-cover"
                      />
                      <div className="flex-1">
                        <div className="flex items-center justify-between mb-2">
                          <div>
                            <h4 className="font-semibold text-gray-900">{post.title}</h4>
                            <p className="text-sm text-gray-600">{post.author.name} ﾂｷ {post.author.department}</p>
                          </div>
                          <div className="text-sm text-gray-500">
                            {post.createdAt.toLocaleDateString('ja-JP')}
                          </div>
                        </div>
                      </div>
                    </div>

                    <div className="space-y-3 mb-4">
                      <div>
                        <span className="text-xs font-semibold text-purple-600 uppercase">迥ｶ豕・/span>
                        <p className="text-gray-700 mt-1">{post.situation}</p>
                      </div>
                      <div>
                        <span className="text-xs font-semibold text-blue-600 uppercase">蟾･螟ｫ縺励◆縺薙→</span>
                        <p className="text-gray-700 mt-1">{post.innovation}</p>
                      </div>
                      <div>
                        <span className="text-xs font-semibold text-green-600 uppercase">邨先棡</span>
                        <p className="text-gray-700 mt-1">{post.result}</p>
                      </div>
                    </div>

                    <div className="flex items-center justify-between pt-4 border-t border-gray-100">
                      <div className="flex flex-wrap gap-2">
                        {post.tags.map((tag, index) => (
                          <span key={index} className="px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded-full">
                            {tag}
                          </span>
                        ))}
                      </div>
                      <div className="flex items-center space-x-4 text-sm text-gray-500">
                        <span className="flex items-center space-x-1">
                          <ThumbsUp className="w-4 h-4" />
                          <span>{post.reactions.like}</span>
                        </span>
                        <span className="flex items-center space-x-1">
                          <Eye className="w-4 h-4" />
                          <span>{post.views}</span>
                        </span>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        )}

        {/* 繝輔Ξ繝ｼ繧ｺ髮・ち繝・*/}
        {activeDetailTab === 'phrases' && selectedEvent.keyPhrases.length > 0 && (
          <div className="bg-white rounded-xl border border-gray-200 p-6">
            <div className="flex items-center space-x-2 mb-4">
              <MessageCircle className="w-5 h-5 text-success-green" />
              <h3 className="text-lg font-semibold text-gray-900">蜉ｹ譫懃噪縺ｪ螢ｰ縺九￠繝輔Ξ繝ｼ繧ｺ</h3>
            </div>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {selectedEvent.keyPhrases.map((phrase, index) => (
                <div key={index} className="p-4 bg-green-50 rounded-lg border border-green-200">
                  <p className="text-gray-800 font-medium text-base">{phrase}</p>
                </div>
              ))}
            </div>
          </div>
        )}
      </div>
    );
  }

  return (
    <div className="space-y-6">

      {/* 邨ｱ險域ュ蝣ｱ */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        <button
          onClick={() => setShowEventSelectionModal(true)}
          className="bg-white rounded-xl border border-gray-200 p-4 text-center hover:border-purple-600 hover:shadow-md transition-all"
        >
          <Users className="w-8 h-8 text-purple-600 mx-auto mb-2" />
          <div className="text-xl font-bold text-gray-900">
            {selectedParticipatingEvents.length}
          </div>
          <div className="text-sm text-gray-600">蜿ょ刈荳ｭ繧､繝吶Φ繝・/div>
          <div className="text-xs text-purple-600 mt-1">繧ｯ繝ｪ繝・け縺励※驕ｸ謚・/div>
        </button>
        <button
          onClick={() => setShowAllEventsModal(true)}
          className="bg-white rounded-xl border border-gray-200 p-4 text-center hover:border-sky-blue hover:shadow-md transition-all"
        >
          <Calendar className="w-8 h-8 text-sky-blue mx-auto mb-2" />
          <div className="text-xl font-bold text-gray-900">{mockEvents.length}</div>
          <div className="text-sm text-gray-600">邱上う繝吶Φ繝域焚</div>
          <div className="text-xs text-sky-blue mt-1">繧ｯ繝ｪ繝・け縺励※驕主悉繧､繝吶Φ繝医ｒ遒ｺ隱・/div>
        </button>
      </div>

      {/* 讀懃ｴ｢繝ｻ繝輔ぅ繝ｫ繧ｿ繝ｼ */}
      <div className="bg-white rounded-xl border border-gray-200 p-4">
        <div className="flex flex-col sm:flex-row space-y-3 sm:space-y-0 sm:space-x-4">
          <div className="flex-1 relative">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" />
            <input
              type="text"
              placeholder="繧､繝吶Φ繝亥錐繧・ち繧ｰ縺ｧ讀懃ｴ｢..."
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-sky-blue focus:border-transparent"
            />
          </div>
          
          <select
            value={filterStatus}
            onChange={(e) => setFilterStatus(e.target.value as FilterStatus)}
            className="px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-sky-blue focus:border-transparent"
          >
            <option value="all">縺吶∋縺ｦ</option>
            <option value="my-events">蜿ょ刈荳ｭ縺ｮ繧､繝吶Φ繝・/option>
            <option value="active">髢句ぎ荳ｭ</option>
            <option value="upcoming">髢句ぎ莠亥ｮ・/option>
            <option value="completed">邨ゆｺ・/option>
          </select>
        </div>
      </div>

      {/* 繧､繝吶Φ繝井ｸ隕ｧ */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {filteredEvents.map((event) => (
          <div
            key={event.id}
            onClick={() => handleEventClick(event)}
            className={`bg-white rounded-xl border p-6 hover:shadow-lg transition-all duration-200 cursor-pointer group ${
              selectedParticipatingEvents.includes(event.id)
                ? 'border-purple-200 bg-purple-50'
                : 'border-gray-200'
            }`}
          >
            <div className="flex items-start justify-between mb-4">
              <div className="flex-1">
                <div className="flex items-center space-x-2 mb-2">
                  {selectedParticipatingEvents.includes(event.id) && (
                    <span className="inline-flex items-center space-x-1 px-2 py-1 text-xs font-medium rounded-full bg-purple-100 text-purple-700">
                      <Users className="w-3 h-3" />
                      <span>蜿ょ刈荳ｭ</span>
                    </span>
                  )}
                  <h3 className="text-lg font-semibold text-gray-900 group-hover:text-sky-blue transition-colors">
                    {event.name}
                  </h3>
                  <span className={`px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(event.status)}`}>
                    {getStatusLabel(event.status)}
                  </span>
                </div>
                <p className="text-sm text-gray-600 mb-3">{event.description}</p>
              </div>
              <ChevronRight className="w-5 h-5 text-gray-400 group-hover:text-sky-blue transition-colors" />
            </div>

            <div className="grid grid-cols-3 gap-4 mb-4">
              <div className="text-center">
                <div className="text-lg font-bold text-sky-blue">{event.totalPosts}</div>
                <div className="text-xs text-gray-600">謚慕ｨｿ莠倶ｾ・/div>
              </div>
              <div className="text-center">
                <div className="text-lg font-bold text-success-green">{event.totalReactions}</div>
                <div className="text-xs text-gray-600">繝ｪ繧｢繧ｯ繧ｷ繝ｧ繝ｳ</div>
              </div>
              <div className="text-center">
                <div className="text-lg font-bold text-sunshine-yellow">{event.bestPractices.length}</div>
                <div className="text-xs text-gray-600">繝吶せ繝井ｺ倶ｾ・/div>
              </div>
            </div>

            <div className="flex flex-wrap gap-2 mb-4">
              {event.tags.slice(0, 3).map((tag, index) => (
                <span key={index} className="px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded-md">
                  {tag}
                </span>
              ))}
              {event.tags.length > 3 && (
                <span className="px-2 py-1 bg-gray-100 text-gray-500 text-xs rounded-md">
                  +{event.tags.length - 3}蛟・                </span>
              )}
            </div>

            <div className="flex items-center justify-between text-sm text-gray-500">
              <div className="flex items-center space-x-1">
                <Calendar className="w-4 h-4" />
                <span>
                  {event.startDate.toLocaleDateString('ja-JP', { month: 'short', day: 'numeric' })} - 
                  {event.endDate.toLocaleDateString('ja-JP', { month: 'short', day: 'numeric' })}
                </span>
              </div>
              <div className="flex items-center space-x-1">
                <Users className="w-4 h-4" />
                <span>{event.stores.length}蠎苓・</span>
              </div>
            </div>
          </div>
        ))}
      </div>

      {filteredEvents.length === 0 && (
        <div className="bg-white rounded-xl border border-gray-200 p-8 text-center">
          <Calendar className="w-12 h-12 text-gray-400 mx-auto mb-4" />
          <h3 className="text-lg font-medium text-gray-900 mb-2">
            {filterStatus === 'my-events' ? '蜿ょ刈荳ｭ縺ｮ繧､繝吶Φ繝医′縺ゅｊ縺ｾ縺帙ｓ' : '隧ｲ蠖薙☆繧九う繝吶Φ繝医′隕九▽縺九ｊ縺ｾ縺帙ｓ'}
          </h3>
          <p className="text-gray-600">
            {filterStatus === 'my-events' 
              ? '繧､繝吶Φ繝医↓蜿ょ刈縺励※莠倶ｾ九ｒ蜈ｱ譛峨＠縺ｾ縺励ｇ縺・ 
              : '讀懃ｴ｢譚｡莉ｶ繧貞､画峩縺励※縺願ｩｦ縺励￥縺縺輔＞'
            }
          </p>
        </div>
      )}

      {/* 繝偵Φ繝・*/}
      <div className="bg-blue-50 border border-blue-200 rounded-xl p-6">
        <h3 className="font-semibold text-sky-blue mb-2">庁 繧､繝吶Φ繝医・繝ｼ繧ｸ縺ｮ豢ｻ逕ｨ譁ｹ豕・/h3>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-blue-700">
          <div>
            <h4 className="font-medium mb-1">莠句燕貅門ｙ</h4>
            <ul className="space-y-1">
              <li>窶｢ 驕主悉縺ｮ鬘樔ｼｼ繧､繝吶Φ繝井ｺ倶ｾ九ｒ遒ｺ隱・/li>
              <li>窶｢ 謌仙粥繝代ち繝ｼ繝ｳ繧剃ｺ句燕蟄ｦ鄙・/li>
              <li>窶｢ 蜉ｹ譫懃噪縺ｪ繝輔Ξ繝ｼ繧ｺ繧呈ｺ門ｙ</li>
            </ul>
          </div>
          <div>
            <h4 className="font-medium mb-1">繧､繝吶Φ繝井ｸｭ</h4>
            <ul className="space-y-1">
              <li>窶｢ 繝吶せ繝医・繝ｩ繧ｯ繝・ぅ繧ｹ繧貞ｮ溯ｷｵ</li>
              <li>窶｢ 譁ｰ縺励＞謌仙粥莠倶ｾ九ｒ繧ｳ繝溘Η繝九ユ繧｣縺ｫ謚慕ｨｿ</li>
              <li>窶｢ 莉門ｺ苓・縺ｮ譛譁ｰ莠倶ｾ九ｒ繝√ぉ繝・け</li>
            </ul>
          </div>
        </div>
      </div>

      {/* 繧､繝吶Φ繝磯∈謚槭Δ繝ｼ繝繝ｫ */}
      {showEventSelectionModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-2xl max-w-3xl w-full max-h-[90vh] overflow-y-auto">
            {/* 繝｢繝ｼ繝繝ｫ繝倥ャ繝繝ｼ */}
            <div className="sticky top-0 bg-white border-b border-gray-200 p-6">
              <div className="flex items-center justify-between mb-4">
                <div>
                  <h2 className="text-2xl font-bold text-gray-900">蜿ょ刈繧､繝吶Φ繝医ｒ驕ｸ謚・/h2>
                  <p className="text-gray-600 mt-1">髢句ぎ荳ｭ縺ｮ繧､繝吶Φ繝医°繧牙盾蜉縺吶ｋ繧ゅ・繧帝∈繧薙〒縺上□縺輔＞</p>
                </div>
                <button
                  onClick={() => setShowEventSelectionModal(false)}
                  className="p-2 hover:bg-gray-100 rounded-lg transition-colors"
                >
                  <X className="w-5 h-5 text-gray-500" />
                </button>
              </div>

              {/* 繧ｨ繝ｪ繧｢繝輔ぅ繝ｫ繧ｿ */}
              <div className="flex items-center space-x-2 overflow-x-auto pb-2">
                <span className="text-sm font-medium text-gray-700 whitespace-nowrap">繧ｨ繝ｪ繧｢:</span>
                {['all', '蛹玲ｵｷ驕・, '譚ｱ蛹・, '髢｢譚ｱ', '荳ｭ驛ｨ', '霑醍柄', '荳ｭ蝗ｽ', '蝗帛嵜', '荵晏ｷ・].map((area) => (
                  <button
                    key={area}
                    onClick={() => setSelectedArea(area)}
                    className={`px-4 py-2 rounded-lg text-sm font-medium whitespace-nowrap transition-colors ${
                      selectedArea === area
                        ? 'bg-purple-600 text-white'
                        : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                    }`}
                  >
                    {area === 'all' ? '縺吶∋縺ｦ' : area}
                  </button>
                ))}
              </div>
            </div>

            {/* 髢句ぎ荳ｭ繧､繝吶Φ繝井ｸ隕ｧ */}
            <div className="p-6 space-y-4">
              {activeEvents.length > 0 ? (
                activeEvents.map((event) => (
                  <button
                    key={event.id}
                    onClick={() => handleToggleEventParticipation(event.id)}
                    className={`w-full text-left p-4 rounded-xl border-2 transition-all ${
                      selectedParticipatingEvents.includes(event.id)
                        ? 'border-purple-600 bg-purple-50'
                        : 'border-gray-200 hover:border-purple-300 hover:bg-gray-50'
                    }`}
                  >
                    <div className="flex items-start justify-between">
                      <div className="flex-1">
                        <div className="flex items-center space-x-3 mb-2">
                          <h3 className="text-lg font-semibold text-gray-900">{event.name}</h3>
                          <span className="px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-success-green">
                            髢句ぎ荳ｭ
                          </span>
                        </div>
                        <p className="text-sm text-gray-600 mb-3">{event.description}</p>
                        <div className="flex items-center space-x-4 text-xs text-gray-500">
                          <div className="flex items-center space-x-1">
                            <Calendar className="w-4 h-4" />
                            <span>
                              {event.startDate.toLocaleDateString('ja-JP', { month: 'short', day: 'numeric' })} -
                              {event.endDate.toLocaleDateString('ja-JP', { month: 'short', day: 'numeric' })}
                            </span>
                          </div>
                          <div className="flex items-center space-x-1">
                            <Users className="w-4 h-4" />
                            <span>{event.stores.length}蠎苓・蜿ょ刈</span>
                          </div>
                          <div className="flex items-center space-x-1">
                            <MessageCircle className="w-4 h-4" />
                            <span>{event.totalPosts}莉ｶ縺ｮ莠倶ｾ・/span>
                          </div>
                        </div>
                      </div>
                      <div className={`w-6 h-6 rounded-full border-2 flex items-center justify-center flex-shrink-0 ml-3 ${
                        selectedParticipatingEvents.includes(event.id)
                          ? 'border-purple-600 bg-purple-600'
                          : 'border-gray-300'
                      }`}>
                        {selectedParticipatingEvents.includes(event.id) && (
                          <Check className="w-4 h-4 text-white" />
                        )}
                      </div>
                    </div>
                  </button>
                ))
              ) : (
                <div className="text-center py-12">
                  <Calendar className="w-16 h-16 text-gray-400 mx-auto mb-4" />
                  <p className="text-gray-600">迴ｾ蝨ｨ髢句ぎ荳ｭ縺ｮ繧､繝吶Φ繝医・縺ゅｊ縺ｾ縺帙ｓ</p>
                </div>
              )}
            </div>

            {/* 繝｢繝ｼ繝繝ｫ繝輔ャ繧ｿ繝ｼ */}
            <div className="sticky bottom-0 bg-white border-t border-gray-200 p-6 flex justify-between items-center">
              <div className="text-sm text-gray-600">
                {selectedParticipatingEvents.length}莉ｶ縺ｮ繧､繝吶Φ繝医ｒ驕ｸ謚樔ｸｭ
              </div>
              <div className="flex space-x-3">
                <button
                  onClick={() => setShowEventSelectionModal(false)}
                  className="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors"
                >
                  繧ｭ繝｣繝ｳ繧ｻ繝ｫ
                </button>
                <button
                  onClick={handleSaveParticipatingEvents}
                  disabled={isLoading}
                  className="px-6 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors font-semibold disabled:bg-gray-300 disabled:cursor-not-allowed"
                >
                  {isLoading ? '菫晏ｭ倅ｸｭ...' : '菫晏ｭ・}
                </button>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* 驕主悉繧､繝吶Φ繝井ｸ隕ｧ繝｢繝ｼ繝繝ｫ */}
      {showAllEventsModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-2xl max-w-5xl w-full max-h-[90vh] overflow-y-auto">
            {/* 繝｢繝ｼ繝繝ｫ繝倥ャ繝繝ｼ */}
            <div className="sticky top-0 bg-white border-b border-gray-200 p-6">
              <div className="flex items-center justify-between mb-4">
                <div>
                  <h2 className="text-2xl font-bold text-gray-900">驕主悉縺ｮ繧､繝吶Φ繝井ｸ隕ｧ</h2>
                  <p className="text-gray-600 mt-1">驕主悉縺ｫ髢句ぎ縺輔ｌ縺溘う繝吶Φ繝医ｒ遒ｺ隱阪〒縺阪∪縺・/p>
                </div>
                <button
                  onClick={() => setShowAllEventsModal(false)}
                  className="p-2 hover:bg-gray-100 rounded-lg transition-colors"
                >
                  <X className="w-5 h-5 text-gray-500" />
                </button>
              </div>

              {/* 繝輔ぅ繝ｫ繧ｿ繝ｼ */}
              <div className="flex flex-col sm:flex-row gap-3">
                <div className="flex-1">
                  <label className="text-sm font-medium text-gray-700 mb-1 block">繧ｨ繝ｪ繧｢</label>
                  <select
                    value={allEventsFilterArea}
                    onChange={(e) => setAllEventsFilterArea(e.target.value)}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-sky-blue focus:border-transparent"
                  >
                    <option value="all">縺吶∋縺ｦ縺ｮ繧ｨ繝ｪ繧｢</option>
                    <option value="蜈ｨ蝗ｽ">蜈ｨ蝗ｽ</option>
                    <option value="蛹玲ｵｷ驕・>蛹玲ｵｷ驕・/option>
                    <option value="譚ｱ蛹・>譚ｱ蛹・/option>
                    <option value="髢｢譚ｱ">髢｢譚ｱ</option>
                    <option value="荳ｭ驛ｨ">荳ｭ驛ｨ</option>
                    <option value="霑醍柄">霑醍柄</option>
                    <option value="荳ｭ蝗ｽ">荳ｭ蝗ｽ</option>
                    <option value="蝗帛嵜">蝗帛嵜</option>
                    <option value="荵晏ｷ槭・豐也ｸ・>荵晏ｷ槭・豐也ｸ・/option>
                  </select>
                </div>
                <div className="flex-1">
                  <label className="text-sm font-medium text-gray-700 mb-1 block">蟷ｴ蠎ｦ</label>
                  <select
                    value={allEventsFilterYear}
                    onChange={(e) => setAllEventsFilterYear(e.target.value)}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-sky-blue focus:border-transparent"
                  >
                    <option value="all">縺吶∋縺ｦ縺ｮ蟷ｴ蠎ｦ</option>
                    <option value="2024">2024蟷ｴ</option>
                    <option value="2023">2023蟷ｴ</option>
                    <option value="2022">2022蟷ｴ</option>
                    <option value="2021">2021蟷ｴ</option>
                  </select>
                </div>
              </div>
            </div>

            {/* 繧､繝吶Φ繝井ｸ隕ｧ */}
            <div className="p-6 space-y-4">
              {mockEvents
                .filter(event => {
                  // 繧ｨ繝ｪ繧｢繝槭ャ繝斐Φ繧ｰ髢｢謨ｰ
                  const getAreaFromStore = (storeName: string): string => {
                    if (storeName.includes('蜈ｨ蠎苓・')) return '蜈ｨ蝗ｽ';
                    if (storeName.includes('譛ｭ蟷・)) return '蛹玲ｵｷ驕・;
                    if (storeName.includes('莉吝床')) return '譚ｱ蛹・;
                    if (storeName.includes('譚ｱ莠ｬ') || storeName.includes('貂玖ｰｷ') || storeName.includes('譁ｰ螳ｿ') ||
                        storeName.includes('豎陲・) || storeName.includes('譛画･ｽ逕ｺ') || storeName.includes('遘玖痩蜴・)) return '髢｢譚ｱ';
                    if (storeName.includes('讓ｪ豬・) || storeName.includes('蟾晏ｴ・)) return '髢｢譚ｱ';
                    if (storeName.includes('蝓ｼ邇・) || storeName.includes('蜊・痩')) return '髢｢譚ｱ';
                    if (storeName.includes('蜷榊商螻・)) return '荳ｭ驛ｨ';
                    if (storeName.includes('螟ｧ髦ｪ') || storeName.includes('譴・伐') || storeName.includes('髮｣豕｢') || storeName.includes('螟ｩ邇句ｯｺ')) return '霑醍柄';
                    if (storeName.includes('遖丞ｲ｡') || storeName.includes('螟ｩ逾・) || storeName.includes('蜊壼､・)) return '荵晏ｷ槭・豐也ｸ・;
                    return '蜈ｨ蝗ｽ';
                  };

                  const areaMatch = allEventsFilterArea === 'all' ||
                    event.stores.some(store => {
                      const storeArea = getAreaFromStore(store);
                      return storeArea === allEventsFilterArea;
                    }) ||
                    (allEventsFilterArea === '蜈ｨ蝗ｽ' && event.stores.includes('蜈ｨ蠎苓・'));

                  const yearMatch = allEventsFilterYear === 'all' ||
                    event.startDate.getFullYear().toString() === allEventsFilterYear;

                  return areaMatch && yearMatch;
                })
                .map((event) => (
                  <div
                    key={event.id}
                    onClick={() => {
                      setShowAllEventsModal(false);
                      handleEventClick(event);
                    }}
                    className="p-4 rounded-xl border-2 border-gray-200 hover:border-sky-blue hover:bg-gray-50 transition-all cursor-pointer"
                  >
                    <div className="flex items-start justify-between">
                      <div className="flex-1">
                        <div className="flex items-center space-x-3 mb-2">
                          <h3 className="text-lg font-semibold text-gray-900">{event.name}</h3>
                          <span className={`px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(event.status)}`}>
                            {getStatusLabel(event.status)}
                          </span>
                        </div>
                        <p className="text-sm text-gray-600 mb-3">{event.description}</p>
                        <div className="flex items-center space-x-4 text-xs text-gray-500">
                          <div className="flex items-center space-x-1">
                            <Calendar className="w-4 h-4" />
                            <span>
                              {event.startDate.toLocaleDateString('ja-JP', { year: 'numeric', month: 'short', day: 'numeric' })} -
                              {event.endDate.toLocaleDateString('ja-JP', { year: 'numeric', month: 'short', day: 'numeric' })}
                            </span>
                          </div>
                          <div className="flex items-center space-x-1">
                            <Users className="w-4 h-4" />
                            <span>{event.stores.length}蠎苓・蜿ょ刈</span>
                          </div>
                          <div className="flex items-center space-x-1">
                            <MessageCircle className="w-4 h-4" />
                            <span>{event.totalPosts}莉ｶ縺ｮ莠倶ｾ・/span>
                          </div>
                        </div>
                      </div>
                      <ChevronRight className="w-5 h-5 text-gray-400 flex-shrink-0 ml-3" />
                    </div>
                  </div>
                ))}
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

